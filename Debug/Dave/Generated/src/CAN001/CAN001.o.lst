   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CAN001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN001_lAllocateMOtoNodeList,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	CAN001_lAllocateMOtoNodeList:
  25              	.LFB117:
  26              		.file 1 "../Dave/Generated/src/CAN001/CAN001.c"
   1:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   2:../Dave/Generated/src/CAN001/CAN001.c **** **  DAVE App Name : CAN001       App Version: 1.0.12               
   3:../Dave/Generated/src/CAN001/CAN001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/CAN001/CAN001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
   6:../Dave/Generated/src/CAN001/CAN001.c **** 
   7:../Dave/Generated/src/CAN001/CAN001.c **** /*CODE_BLOCK_BEGIN[CAN001.c]*/
   8:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   9:../Dave/Generated/src/CAN001/CAN001.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
  10:../Dave/Generated/src/CAN001/CAN001.c ****  All rights reserved.                                                         **
  11:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  12:../Dave/Generated/src/CAN001/CAN001.c ****  Redistribution and use in source and binary forms, with or without           **
  13:../Dave/Generated/src/CAN001/CAN001.c ****  modification,are permitted provided that the following conditions are met:   **
  14:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  15:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer.                        **
  17:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer in the documentation    **
  19:../Dave/Generated/src/CAN001/CAN001.c ****  and/or other materials provided with the distribution.                       **
  20:../Dave/Generated/src/CAN001/CAN001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../Dave/Generated/src/CAN001/CAN001.c ****  may be used to endorse or promote products derived from this software without** 
  22:../Dave/Generated/src/CAN001/CAN001.c ****  specific prior written permission.                                           **
  23:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  24:../Dave/Generated/src/CAN001/CAN001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../Dave/Generated/src/CAN001/CAN001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../Dave/Generated/src/CAN001/CAN001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../Dave/Generated/src/CAN001/CAN001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../Dave/Generated/src/CAN001/CAN001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../Dave/Generated/src/CAN001/CAN001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../Dave/Generated/src/CAN001/CAN001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../Dave/Generated/src/CAN001/CAN001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../Dave/Generated/src/CAN001/CAN001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../Dave/Generated/src/CAN001/CAN001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../Dave/Generated/src/CAN001/CAN001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  36:../Dave/Generated/src/CAN001/CAN001.c ****  To improve the quality of the software, users are encouraged to share        **
  37:../Dave/Generated/src/CAN001/CAN001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../Dave/Generated/src/CAN001/CAN001.c ****  dave@infineon.com).                                                          **
  39:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  40:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  41:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  42:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  43:../Dave/Generated/src/CAN001/CAN001.c **** ** PLATFORM : Infineon XMC4000 Series   			                          **
  44:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  45:../Dave/Generated/src/CAN001/CAN001.c **** ** COMPILER : Compiler Independent                                            **
  46:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  47:../Dave/Generated/src/CAN001/CAN001.c **** ** AUTHOR   : App Developer                                                   **
  48:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  49:../Dave/Generated/src/CAN001/CAN001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  50:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  51:../Dave/Generated/src/CAN001/CAN001.c **** ** MODIFICATION DATE : Jan 20, 2014                                           **
  52:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  53:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  54:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  55:../Dave/Generated/src/CAN001/CAN001.c **** **                      Author(s) Identity                                    **
  56:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  57:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  58:../Dave/Generated/src/CAN001/CAN001.c **** ** Initials     Name                                                          **
  59:../Dave/Generated/src/CAN001/CAN001.c **** ** ---------------------------------------------------------------------------**
  60:../Dave/Generated/src/CAN001/CAN001.c **** ** NPJ        App Developer                                                   **
  61:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  62:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  63:../Dave/Generated/src/CAN001/CAN001.c **** /*
  64:../Dave/Generated/src/CAN001/CAN001.c **** * Version History : 
  65:../Dave/Generated/src/CAN001/CAN001.c **** * 12 Dec 2012	 v1.0.2	  1. Initial revision		  								 
  66:../Dave/Generated/src/CAN001/CAN001.c **** *                                                                          
  67:../Dave/Generated/src/CAN001/CAN001.c **** * 30 May 2013	 v1.0.4	  1. MISRA fixes.
  68:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Fixes concerned with the Rx pin(14.3) manual configuration issue. 
  69:../Dave/Generated/src/CAN001/CAN001.c **** *   
  70:../Dave/Generated/src/CAN001/CAN001.c **** * 21 Jun 2013    v1.0.6   1. Reset of INIT & CCE bit has been removed as it shall be handled in   
  71:../Dave/Generated/src/CAN001/CAN001.c **** *                            MULTIPLEXER.c file of DaveSupport app.
  72:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Removed the code concerned with PORTx_PDRx & PORTx_IOCRx register modi
  73:../Dave/Generated/src/CAN001/CAN001.c **** * 22 Aug 2013    v1.0.8   1. Fixes w.r.t incorrect code generation of the CAN NodeId due to multipl
  74:../Dave/Generated/src/CAN001/CAN001.c **** *                            reference created by the data model to a proxy register
  75:../Dave/Generated/src/CAN001/CAN001.c **** * 20 Jan 2014    v1.0.10   1. C++ support added.
  76:../Dave/Generated/src/CAN001/CAN001.c **** *                          2. Delay in app instantiation is resolved.
  77:../Dave/Generated/src/CAN001/CAN001.c **** *                          3. DBG002 App changes are taken care
  78:../Dave/Generated/src/CAN001/CAN001.c **** */
  79:../Dave/Generated/src/CAN001/CAN001.c **** /**
  80:../Dave/Generated/src/CAN001/CAN001.c ****  * @file   CAN001.c
  81:../Dave/Generated/src/CAN001/CAN001.c ****  * 
  82:../Dave/Generated/src/CAN001/CAN001.c ****  * @App Version CAN001 <1.0.12>
  83:../Dave/Generated/src/CAN001/CAN001.c ****  *
  84:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief  CAN_Basic_CAN001 App provides non reentrant API's to configure the 
  85:../Dave/Generated/src/CAN001/CAN001.c ****  *         CAN Nodes which can be used in a non RTOS environment. It provides 
  86:../Dave/Generated/src/CAN001/CAN001.c ****  *         simple APIs to Configure CAN Nodes and to Send /Receive CAN Message 
  87:../Dave/Generated/src/CAN001/CAN001.c ****  *         objects.
  88:../Dave/Generated/src/CAN001/CAN001.c ****  *
  89:../Dave/Generated/src/CAN001/CAN001.c ****  */
  90:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  91:../Dave/Generated/src/CAN001/CAN001.c ****  ** INCLUDE FILES                                                             **
  92:../Dave/Generated/src/CAN001/CAN001.c ****  ******************************************************************************/
  93:../Dave/Generated/src/CAN001/CAN001.c **** 
  94:../Dave/Generated/src/CAN001/CAN001.c **** /** Inclusion of header file */
  95:../Dave/Generated/src/CAN001/CAN001.c **** #include <DAVE3.h>
  96:../Dave/Generated/src/CAN001/CAN001.c **** 
  97:../Dave/Generated/src/CAN001/CAN001.c ****   
  98:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
  99:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 100:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
 101:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
 102:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 103:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
 104:../Dave/Generated/src/CAN001/CAN001.c **** /*These definitions are included here to avoid compilation errors,
 105:../Dave/Generated/src/CAN001/CAN001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 106:../Dave/Generated/src/CAN001/CAN001.c ****  as empty*/ 
 107:../Dave/Generated/src/CAN001/CAN001.c **** #ifndef _DBG002_H_
 108:../Dave/Generated/src/CAN001/CAN001.c **** 
 109:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_MESSAGEID_LITERAL
 110:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_RegisterCallBack(A,B,C)
 111:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_I(e) 
 112:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IG(e,g) 
 113:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IH(e,h) 
 114:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IP(e,p) 
 115:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGH(e,g,h) 
 116:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGP(e,g,p) 
 117:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IHP(e,h,p) 
 118:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGHP(e,g,h,p) 
 119:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_N(e) 
 120:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NG(e,g) 
 121:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NH(e,h) 
 122:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NP(e,p) 
 123:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGH(e,g,h) 
 124:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGP(e,g,p) 
 125:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NHP(e,h,p) 
 126:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGHP(e,g,h,p) 
 127:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ID(e) 
 128:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IS(e) 
 129:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ISG(e,g) 
 130:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 131:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 132:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 133:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 134:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 135:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 136:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status) 
 137:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_EXIT(GID, Status) 
 138:../Dave/Generated/src/CAN001/CAN001.c **** 
 139:../Dave/Generated/src/CAN001/CAN001.c **** #endif/* End of defintions of dummy Debug Log macros*/                  
 140:../Dave/Generated/src/CAN001/CAN001.c **** 
 141:../Dave/Generated/src/CAN001/CAN001.c **** 
 142:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 143:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Macro Definitions                             **
 144:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 145:../Dave/Generated/src/CAN001/CAN001.c **** #define APP_GID DBG002_GID_CAN001
 146:../Dave/Generated/src/CAN001/CAN001.c **** 
 147:../Dave/Generated/src/CAN001/CAN001.c **** /* message objects status mask */
 148:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_MO_STATUS_MASK    (0x0000001BU)
 149:../Dave/Generated/src/CAN001/CAN001.c **** /* Node Status mask */
 150:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_NODE_STATUS_MASK  (0x000003E0U)
 151:../Dave/Generated/src/CAN001/CAN001.c **** /* Macro to Enable */
 152:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_LIST_BEGIN_BITMASK (0x000000FFU)
 153:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for dynamic MO allocation */
 154:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_STATIC_MO_ALLOC (0x00000002U)
 155:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for MO deallocation */
 156:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_DYN_MO_DEALLOC (0x00000004U)
 157:../Dave/Generated/src/CAN001/CAN001.c **** 
 158:../Dave/Generated/src/CAN001/CAN001.c **** 
 159:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 160:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Type Definitions                              **
 161:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 162:../Dave/Generated/src/CAN001/CAN001.c **** 
 163:../Dave/Generated/src/CAN001/CAN001.c **** 
 164:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 165:../Dave/Generated/src/CAN001/CAN001.c **** **                 Private Function Declarations:
 166:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 167:../Dave/Generated/src/CAN001/CAN001.c **** /**
 168:../Dave/Generated/src/CAN001/CAN001.c ****  * @ingroup CAN001_privatefunc
 169:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 170:../Dave/Generated/src/CAN001/CAN001.c ****  */
 171:../Dave/Generated/src/CAN001/CAN001.c ****  
 172:../Dave/Generated/src/CAN001/CAN001.c **** /**
 173:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to allocate message object from free list to node list
 174:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 175:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  List Node list no
 176:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Message object number to be allocated to node list
 177:../Dave/Generated/src/CAN001/CAN001.c ****  *
 178:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     status_t 
 179:../Dave/Generated/src/CAN001/CAN001.c ****  *             MO number allocated
 180:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 181:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 182:../Dave/Generated/src/CAN001/CAN001.c ****  *
 183:../Dave/Generated/src/CAN001/CAN001.c ****  */
 184:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List,uint8_t MsgObjnr);
 185:../Dave/Generated/src/CAN001/CAN001.c **** 
 186:../Dave/Generated/src/CAN001/CAN001.c **** /**
 187:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to deallocate MO from Node list to free list
 188:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 189:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[inout]  MsgObjnr Message object number to be deallocated to free list
 190:../Dave/Generated/src/CAN001/CAN001.c ****  *
 191:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 192:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 193:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 194:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 195:../Dave/Generated/src/CAN001/CAN001.c ****  *
 196:../Dave/Generated/src/CAN001/CAN001.c ****  */
 197:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr);
 198:../Dave/Generated/src/CAN001/CAN001.c **** 
 199:../Dave/Generated/src/CAN001/CAN001.c **** /**
 200:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to configure message object registers
 201:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 202:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjptr Pointer to message object data structure
 203:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Actual message object number
 204:../Dave/Generated/src/CAN001/CAN001.c ****  *
 205:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 206:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 207:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 208:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 209:../Dave/Generated/src/CAN001/CAN001.c ****  *
 210:../Dave/Generated/src/CAN001/CAN001.c ****  */
 211:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs
 212:../Dave/Generated/src/CAN001/CAN001.c **** (
 213:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* MsgObjptr,
 214:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 215:../Dave/Generated/src/CAN001/CAN001.c **** );
 216:../Dave/Generated/src/CAN001/CAN001.c **** 
 217:../Dave/Generated/src/CAN001/CAN001.c **** 
 218:../Dave/Generated/src/CAN001/CAN001.c **** /**
 219:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to initialize node as per UI configuration
 220:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 221:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in] Handle Node configuration structure
 222:../Dave/Generated/src/CAN001/CAN001.c ****  *
 223:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 224:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 225:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 226:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 227:../Dave/Generated/src/CAN001/CAN001.c ****  *
 228:../Dave/Generated/src/CAN001/CAN001.c ****  */
 229:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle);
 230:../Dave/Generated/src/CAN001/CAN001.c **** /**
 231:../Dave/Generated/src/CAN001/CAN001.c ****  *@}
 232:../Dave/Generated/src/CAN001/CAN001.c ****  */
 233:../Dave/Generated/src/CAN001/CAN001.c **** 
 234:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 235:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Constant Definitions                           **
 236:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 237:../Dave/Generated/src/CAN001/CAN001.c **** 
 238:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 239:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Variable Definitions                           **
 240:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 241:../Dave/Generated/src/CAN001/CAN001.c **** 
 242:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 243:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Constant Definitions                          **
 244:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 245:../Dave/Generated/src/CAN001/CAN001.c **** 
 246:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 247:../Dave/Generated/src/CAN001/CAN001.c **** **                 Function like macro definitions                            **
 248:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 249:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 250:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Function Definitions                          **
 251:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 252:../Dave/Generated/src/CAN001/CAN001.c **** 
 253:../Dave/Generated/src/CAN001/CAN001.c **** 
 254:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to allocate message object from free list to node list */
 255:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List, uint8_t MsgObjnr)
 256:../Dave/Generated/src/CAN001/CAN001.c **** {
  27              		.loc 1 256 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0246     		mov	r2, r0
  43 0008 0B46     		mov	r3, r1
  44 000a FA71     		strb	r2, [r7, #7]
  45 000c BB71     		strb	r3, [r7, #6]
 257:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_1>>> */
 258:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for dynamic allocation of MO to node list */
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  46              		.loc 1 259 0
  47 000e 4FF48043 		mov	r3, #16384
  48 0012 C4F60103 		movt	r3, 18433
  49 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  50 0018 02F10102 		add	r2, r2, #1
  51 001c 4FEA0261 		lsl	r1, r2, #24
 260:../Dave/Generated/src/CAN001/CAN001.c **** 		                   ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
  52              		.loc 1 260 0
  53 0020 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  54 0022 4FEA0242 		lsl	r2, r2, #16
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  55              		.loc 1 259 0
  56 0026 0A43     		orrs	r2, r2, r1
  57              		.loc 1 260 0
  58 0028 42F00202 		orr	r2, r2, #2
 259:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  59              		.loc 1 259 0
  60 002c C3F8C421 		str	r2, [r3, #452]
 261:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_STATIC_MO_ALLOC));
 262:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel as done the command */
 263:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
  61              		.loc 1 263 0
  62 0030 00BF     		nop
  63              	.L2:
  64              		.loc 1 263 0 is_stmt 0 discriminator 1
  65 0032 4FF48043 		mov	r3, #16384
  66 0036 C4F60103 		movt	r3, 18433
  67 003a D3F8C431 		ldr	r3, [r3, #452]
  68 003e 03F48073 		and	r3, r3, #256
  69 0042 002B     		cmp	r3, #0
  70 0044 F5D1     		bne	.L2
 264:../Dave/Generated/src/CAN001/CAN001.c ****   {}
 265:../Dave/Generated/src/CAN001/CAN001.c **** }
  71              		.loc 1 265 0 is_stmt 1
  72 0046 07F10C07 		add	r7, r7, #12
  73 004a BD46     		mov	sp, r7
  74 004c 80BC     		pop	{r7}
  75 004e 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE117:
  79              		.section	.text.CAN001_lDeallocateMsgObj,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	CAN001_lDeallocateMsgObj:
  85              	.LFB118:
 266:../Dave/Generated/src/CAN001/CAN001.c **** 
 267:../Dave/Generated/src/CAN001/CAN001.c **** 
 268:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to deallocate MO from Node list to free list */ 
 269:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr)
 270:../Dave/Generated/src/CAN001/CAN001.c **** { 
  86              		.loc 1 270 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 85B0     		sub	sp, sp, #20
  96              	.LCFI4:
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
 271:../Dave/Generated/src/CAN001/CAN001.c **** 	uint32_t FirstMoInList0 = 0U;
 102              		.loc 1 271 0
 103 0008 4FF00003 		mov	r3, #0
 104 000c FB60     		str	r3, [r7, #12]
 272:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_2>>> */
 273:../Dave/Generated/src/CAN001/CAN001.c ****   FirstMoInList0 = (CAN->LIST[0] & CAN001_LIST_BEGIN_BITMASK);
 105              		.loc 1 273 0
 106 000e 4FF48043 		mov	r3, #16384
 107 0012 C4F60103 		movt	r3, 18433
 108 0016 D3F80031 		ldr	r3, [r3, #256]
 109 001a DBB2     		uxtb	r3, r3
 110 001c FB60     		str	r3, [r7, #12]
 274:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for deallocation of MO from Node List */
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 111              		.loc 1 275 0
 112 001e 4FF48043 		mov	r3, #16384
 113 0022 C4F60103 		movt	r3, 18433
 114 0026 FA68     		ldr	r2, [r7, #12]
 115 0028 4FEA0261 		lsl	r1, r2, #24
 276:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
 116              		.loc 1 276 0
 117 002c 7A68     		ldr	r2, [r7, #4]
 118 002e 4FEA0242 		lsl	r2, r2, #16
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 119              		.loc 1 275 0
 120 0032 0A43     		orrs	r2, r2, r1
 121              		.loc 1 276 0
 122 0034 42F00402 		orr	r2, r2, #4
 275:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 123              		.loc 1 275 0
 124 0038 C3F8C421 		str	r2, [r3, #452]
 277:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_DYN_MO_DEALLOC));
 278:../Dave/Generated/src/CAN001/CAN001.c ****     /* wait until panel as done the command */
 279:../Dave/Generated/src/CAN001/CAN001.c ****    while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 125              		.loc 1 279 0
 126 003c 00BF     		nop
 127              	.L4:
 128              		.loc 1 279 0 is_stmt 0 discriminator 1
 129 003e 4FF48043 		mov	r3, #16384
 130 0042 C4F60103 		movt	r3, 18433
 131 0046 D3F8C431 		ldr	r3, [r3, #452]
 132 004a 03F48073 		and	r3, r3, #256
 133 004e 002B     		cmp	r3, #0
 134 0050 F5D1     		bne	.L4
 280:../Dave/Generated/src/CAN001/CAN001.c ****     {}
 281:../Dave/Generated/src/CAN001/CAN001.c **** }
 135              		.loc 1 281 0 is_stmt 1
 136 0052 07F11407 		add	r7, r7, #20
 137 0056 BD46     		mov	sp, r7
 138 0058 80BC     		pop	{r7}
 139 005a 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE118:
 143              		.section	.text.CAN001_lConfigMORegs,"ax",%progbits
 144              		.align	2
 145              		.thumb
 146              		.thumb_func
 148              	CAN001_lConfigMORegs:
 149              	.LFB119:
 282:../Dave/Generated/src/CAN001/CAN001.c **** 
 283:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to configure message object registers */
 284:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs(const CAN001_MessageHandleType* MsgObjptr, uint8_t MsgObjnr)
 285:../Dave/Generated/src/CAN001/CAN001.c **** { 
 150              		.loc 1 285 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 85B0     		sub	sp, sp, #20
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 24
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 166 0008 0B46     		mov	r3, r1
 167 000a FB70     		strb	r3, [r7, #3]
 286:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MO_TypeDef* CAN_MOxRegs = GET_MO_OFFSET(MsgObjnr);
 168              		.loc 1 286 0
 169 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 170 000e 03F11073 		add	r3, r3, #37748736
 171 0012 03F52863 		add	r3, r3, #2688
 172 0016 4FEA4313 		lsl	r3, r3, #5
 173 001a BB60     		str	r3, [r7, #8]
 287:../Dave/Generated/src/CAN001/CAN001.c **** 	  uint32_t Count = 0U;
 174              		.loc 1 287 0
 175 001c 4FF00003 		mov	r3, #0
 176 0020 FB60     		str	r3, [r7, #12]
 288:../Dave/Generated/src/CAN001/CAN001.c **** 	  /* <<<DD_CAN001_nonAPI_3>>> */  
 289:../Dave/Generated/src/CAN001/CAN001.c ****     /* Disable Message object */
 290:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 177              		.loc 1 290 0
 178 0022 BB68     		ldr	r3, [r7, #8]
 179 0024 4FF02002 		mov	r2, #32
 180 0028 DA61     		str	r2, [r3, #28]
 291:../Dave/Generated/src/CAN001/CAN001.c ****     if ((CAN_FrameType)MsgObjptr->IDExten == STANDARDTYPE)
 181              		.loc 1 291 0
 182 002a 7B68     		ldr	r3, [r7, #4]
 183 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 184 002e 002B     		cmp	r3, #0
 185 0030 25D1     		bne	.L6
 292:../Dave/Generated/src/CAN001/CAN001.c ****     {
 293:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure standard identifier and identifier mask*/
 294:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 295:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 296:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(MsgObjptr->Identifier << CAN_MO_MOAR_STDID_Pos) \
 186              		.loc 1 296 0
 187 0032 7B68     		ldr	r3, [r7, #4]
 188 0034 1B68     		ldr	r3, [r3, #0]
 189 0036 4FEA8342 		lsl	r2, r3, #18
 297:../Dave/Generated/src/CAN001/CAN001.c ****                            & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 190              		.loc 1 297 0
 191 003a 4FF00003 		mov	r3, #0
 192 003e C1F6FC73 		movt	r3, 8188
 193 0042 1340     		ands	r3, r3, r2
 295:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 194              		.loc 1 295 0
 195 0044 43F00042 		orr	r2, r3, #-2147483648
 294:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 196              		.loc 1 294 0
 197 0048 BB68     		ldr	r3, [r7, #8]
 198 004a 9A61     		str	r2, [r3, #24]
 298:../Dave/Generated/src/CAN001/CAN001.c ****       if(MsgObjptr->IDEMask == 1U)
 199              		.loc 1 298 0
 200 004c 7B68     		ldr	r3, [r7, #4]
 201 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 202 0050 012B     		cmp	r3, #1
 203 0052 0DD1     		bne	.L7
 299:../Dave/Generated/src/CAN001/CAN001.c ****       {
 300:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 301:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 302:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)(MsgObjptr->IDMask << CAN_MO_MOAR_STDID_Pos) \
 204              		.loc 1 302 0
 205 0054 7B68     		ldr	r3, [r7, #4]
 206 0056 5B68     		ldr	r3, [r3, #4]
 207 0058 4FEA8342 		lsl	r2, r3, #18
 303:../Dave/Generated/src/CAN001/CAN001.c ****                             & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 208              		.loc 1 303 0
 209 005c 4FF00003 		mov	r3, #0
 210 0060 C1F6FC73 		movt	r3, 8188
 211 0064 1340     		ands	r3, r3, r2
 301:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 212              		.loc 1 301 0
 213 0066 43F00052 		orr	r2, r3, #536870912
 300:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 214              		.loc 1 300 0
 215 006a BB68     		ldr	r3, [r7, #8]
 216 006c DA60     		str	r2, [r3, #12]
 217 006e 1BE0     		b	.L8
 218              	.L7:
 304:../Dave/Generated/src/CAN001/CAN001.c ****       }
 305:../Dave/Generated/src/CAN001/CAN001.c ****       else
 306:../Dave/Generated/src/CAN001/CAN001.c ****       {
 307:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 308:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 309:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)CAN_MO_MOAMR_AM_Msk & (uint32_t)MsgObjptr->IDMask));
 219              		.loc 1 309 0
 220 0070 7B68     		ldr	r3, [r7, #4]
 221 0072 5B68     		ldr	r3, [r3, #4]
 308:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 222              		.loc 1 308 0
 223 0074 23F06042 		bic	r2, r3, #-536870912
 307:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 224              		.loc 1 307 0
 225 0078 BB68     		ldr	r3, [r7, #8]
 226 007a DA60     		str	r2, [r3, #12]
 227 007c 14E0     		b	.L8
 228              	.L6:
 310:../Dave/Generated/src/CAN001/CAN001.c ****       }                      
 311:../Dave/Generated/src/CAN001/CAN001.c ****     } /* if (MsgObjptr->IDExten == STANDARDTYPE) */
 312:../Dave/Generated/src/CAN001/CAN001.c ****     else
 313:../Dave/Generated/src/CAN001/CAN001.c ****     {
 314:../Dave/Generated/src/CAN001/CAN001.c ****         /* Configure Extended identifier and identifier mask*/
 315:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 316:../Dave/Generated/src/CAN001/CAN001.c ****     		                (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 317:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(CAN_MO_MOAR_ID_Msk & MsgObjptr->Identifier)) | \
 229              		.loc 1 317 0
 230 007e 7B68     		ldr	r3, [r7, #4]
 231 0080 1B68     		ldr	r3, [r3, #0]
 232 0082 23F06043 		bic	r3, r3, #-536870912
 233 0086 43F02042 		orr	r2, r3, #-1610612736
 315:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 234              		.loc 1 315 0
 235 008a BB68     		ldr	r3, [r7, #8]
 236 008c 9A61     		str	r2, [r3, #24]
 318:../Dave/Generated/src/CAN001/CAN001.c ****                             (((uint32_t)1UL << CAN_MO_MOAR_IDE_Pos ) & \
 319:../Dave/Generated/src/CAN001/CAN001.c ****                             		(uint32_t)CAN_MO_MOAR_IDE_Msk));
 320:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 237              		.loc 1 320 0
 238 008e 7B68     		ldr	r3, [r7, #4]
 239 0090 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 240 0092 4FEA4373 		lsl	r3, r3, #29
 241 0096 03F00052 		and	r2, r3, #536870912
 321:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 322:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)(CAN_MO_MOAMR_AM_Msk & MsgObjptr->IDMask));
 242              		.loc 1 322 0
 243 009a 7B68     		ldr	r3, [r7, #4]
 244 009c 5B68     		ldr	r3, [r3, #4]
 245 009e 23F06043 		bic	r3, r3, #-536870912
 321:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 246              		.loc 1 321 0
 247 00a2 1A43     		orrs	r2, r2, r3
 320:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 248              		.loc 1 320 0
 249 00a4 BB68     		ldr	r3, [r7, #8]
 250 00a6 DA60     		str	r2, [r3, #12]
 251              	.L8:
 323:../Dave/Generated/src/CAN001/CAN001.c ****     }
 324:../Dave/Generated/src/CAN001/CAN001.c ****       /* Check whether message object is transmit message object */
 325:../Dave/Generated/src/CAN001/CAN001.c ****       /*<<<DD_CAN001_API_3_2>>>*/
 326:../Dave/Generated/src/CAN001/CAN001.c ****     if (MsgObjptr->MsgObjType == TRANSMSGOBJ)
 252              		.loc 1 326 0
 253 00a8 7B68     		ldr	r3, [r7, #4]
 254 00aa 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 255 00ac 012B     		cmp	r3, #1
 256 00ae 77D1     		bne	.L9
 327:../Dave/Generated/src/CAN001/CAN001.c ****   
 328:../Dave/Generated/src/CAN001/CAN001.c ****     {
 329:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure data length */
 330:../Dave/Generated/src/CAN001/CAN001.c ****       WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 257              		.loc 1 330 0
 258 00b0 7B68     		ldr	r3, [r7, #4]
 259 00b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 260 00b4 4FEA0363 		lsl	r3, r3, #24
 261 00b8 03F07062 		and	r2, r3, #251658240
 262 00bc BB68     		ldr	r3, [r7, #8]
 263 00be 1B68     		ldr	r3, [r3, #0]
 264 00c0 23F07063 		bic	r3, r3, #251658240
 265 00c4 1A43     		orrs	r2, r2, r3
 266 00c6 BB68     		ldr	r3, [r7, #8]
 267 00c8 1A60     		str	r2, [r3, #0]
 331:../Dave/Generated/src/CAN001/CAN001.c ****                             CAN_MO_MOFCR_DLC_Pos, (uint32_t)MsgObjptr->DataLength);
 332:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure Data registers*/
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 268              		.loc 1 333 0
 269 00ca 4FF00003 		mov	r3, #0
 270 00ce FB60     		str	r3, [r7, #12]
 271 00d0 59E0     		b	.L10
 272              	.L13:
 334:../Dave/Generated/src/CAN001/CAN001.c ****       {
 335:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 273              		.loc 1 335 0
 274 00d2 FB68     		ldr	r3, [r7, #12]
 275 00d4 032B     		cmp	r3, #3
 276 00d6 23D8     		bhi	.L11
 336:../Dave/Generated/src/CAN001/CAN001.c ****         {
 337:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)((uint32_t)CAN_MO_MODATAL_DB0_Msk << (Count*8U)), 
 277              		.loc 1 337 0
 278 00d8 7A68     		ldr	r2, [r7, #4]
 279 00da FB68     		ldr	r3, [r7, #12]
 280 00dc D318     		adds	r3, r2, r3
 281 00de 03F10803 		add	r3, r3, #8
 282 00e2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 283 00e4 1A46     		mov	r2, r3
 284 00e6 FB68     		ldr	r3, [r7, #12]
 285 00e8 4FEAC303 		lsl	r3, r3, #3
 286 00ec 02FA03F2 		lsl	r2, r2, r3
 287 00f0 FB68     		ldr	r3, [r7, #12]
 288 00f2 4FEAC303 		lsl	r3, r3, #3
 289 00f6 4FF0FF01 		mov	r1, #255
 290 00fa 01FA03F3 		lsl	r3, r1, r3
 291 00fe 1A40     		ands	r2, r2, r3
 292 0100 BB68     		ldr	r3, [r7, #8]
 293 0102 1969     		ldr	r1, [r3, #16]
 294 0104 FB68     		ldr	r3, [r7, #12]
 295 0106 4FEAC303 		lsl	r3, r3, #3
 296 010a 4FF0FF00 		mov	r0, #255
 297 010e 00FA03F3 		lsl	r3, r0, r3
 298 0112 6FEA0303 		mvn	r3, r3
 299 0116 0B40     		ands	r3, r3, r1
 300 0118 1A43     		orrs	r2, r2, r3
 301 011a BB68     		ldr	r3, [r7, #8]
 302 011c 1A61     		str	r2, [r3, #16]
 303 011e 2EE0     		b	.L12
 304              	.L11:
 338:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U),(uint32_t)MsgObjptr->data[Count]);
 339:../Dave/Generated/src/CAN001/CAN001.c ****         }
 340:../Dave/Generated/src/CAN001/CAN001.c ****         else
 341:../Dave/Generated/src/CAN001/CAN001.c ****         {
 342:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 305              		.loc 1 342 0
 306 0120 7A68     		ldr	r2, [r7, #4]
 307 0122 FB68     		ldr	r3, [r7, #12]
 308 0124 D318     		adds	r3, r2, r3
 309 0126 03F10803 		add	r3, r3, #8
 310 012a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 311 012c 1A46     		mov	r2, r3
 312 012e FB68     		ldr	r3, [r7, #12]
 313 0130 03F10053 		add	r3, r3, #536870912
 314 0134 A3F10403 		sub	r3, r3, #4
 315 0138 4FEAC303 		lsl	r3, r3, #3
 316 013c 02FA03F2 		lsl	r2, r2, r3
 317 0140 FB68     		ldr	r3, [r7, #12]
 318 0142 03F10053 		add	r3, r3, #536870912
 319 0146 A3F10403 		sub	r3, r3, #4
 320 014a 4FEAC303 		lsl	r3, r3, #3
 321 014e 4FF0FF01 		mov	r1, #255
 322 0152 01FA03F3 		lsl	r3, r1, r3
 323 0156 1A40     		ands	r2, r2, r3
 324 0158 BB68     		ldr	r3, [r7, #8]
 325 015a 5969     		ldr	r1, [r3, #20]
 326 015c FB68     		ldr	r3, [r7, #12]
 327 015e 03F10053 		add	r3, r3, #536870912
 328 0162 A3F10403 		sub	r3, r3, #4
 329 0166 4FEAC303 		lsl	r3, r3, #3
 330 016a 4FF0FF00 		mov	r0, #255
 331 016e 00FA03F3 		lsl	r3, r0, r3
 332 0172 6FEA0303 		mvn	r3, r3
 333 0176 0B40     		ands	r3, r3, r1
 334 0178 1A43     		orrs	r2, r2, r3
 335 017a BB68     		ldr	r3, [r7, #8]
 336 017c 5A61     		str	r2, [r3, #20]
 337              	.L12:
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 338              		.loc 1 333 0
 339 017e FB68     		ldr	r3, [r7, #12]
 340 0180 03F10103 		add	r3, r3, #1
 341 0184 FB60     		str	r3, [r7, #12]
 342              	.L10:
 333:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 343              		.loc 1 333 0 is_stmt 0 discriminator 1
 344 0186 7B68     		ldr	r3, [r7, #4]
 345 0188 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 346 018a 1A46     		mov	r2, r3
 347 018c FB68     		ldr	r3, [r7, #12]
 348 018e 9A42     		cmp	r2, r3
 349 0190 9FD8     		bhi	.L13
 343:../Dave/Generated/src/CAN001/CAN001.c ****                                     ((Count-4U)*8U), (uint32_t)MsgObjptr->data[Count]);
 344:../Dave/Generated/src/CAN001/CAN001.c ****         } /* if(Count < 4) */
 345:../Dave/Generated/src/CAN001/CAN001.c ****       }  /* for(Count = 0; Count < MsgObjptr->DataLength; Count++) */
 346:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Transmit message object and set NEWDAT bit */
 347:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETDIR_Msk | \
 350              		.loc 1 347 0 is_stmt 1
 351 0192 BA68     		ldr	r2, [r7, #8]
 352 0194 4FF00003 		mov	r3, #0
 353 0198 C0F60803 		movt	r3, 2056
 354 019c D361     		str	r3, [r2, #28]
 355 019e 03E0     		b	.L14
 356              	.L9:
 348:../Dave/Generated/src/CAN001/CAN001.c ****                                                    CAN_MO_MOCTR_SETNEWDAT_Msk);
 349:../Dave/Generated/src/CAN001/CAN001.c ****     }/*if (MsgType == TRANSMSGOBJ)*/
 350:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_3_3>>>*/
 351:../Dave/Generated/src/CAN001/CAN001.c ****     else
 352:../Dave/Generated/src/CAN001/CAN001.c ****     { 
 353:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Receive message object and set RXEN bit */
 354:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 357              		.loc 1 354 0
 358 01a0 BB68     		ldr	r3, [r7, #8]
 359 01a2 4FF40062 		mov	r2, #2048
 360 01a6 DA61     		str	r2, [r3, #28]
 361              	.L14:
 355:../Dave/Generated/src/CAN001/CAN001.c ****     } /*if(MsgType == RECMSGOBJ)*/
 356:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 357:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 362              		.loc 1 357 0
 363 01a8 BB68     		ldr	r3, [r7, #8]
 364 01aa 4FF0D462 		mov	r2, #111149056
 365 01ae DA61     		str	r2, [r3, #28]
 358:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 359:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 360:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk );
 361:../Dave/Generated/src/CAN001/CAN001.c **** }
 366              		.loc 1 361 0
 367 01b0 07F11407 		add	r7, r7, #20
 368 01b4 BD46     		mov	sp, r7
 369 01b6 80BC     		pop	{r7}
 370 01b8 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE119:
 374 01ba 00BF     		.section	.text.CAN001_lNodeInit,"ax",%progbits
 375              		.align	2
 376              		.thumb
 377              		.thumb_func
 379              	CAN001_lNodeInit:
 380              	.LFB120:
 362:../Dave/Generated/src/CAN001/CAN001.c **** 
 363:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 364:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle)
 365:../Dave/Generated/src/CAN001/CAN001.c ****  {
 381              		.loc 1 365 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 24
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 86B0     		sub	sp, sp, #24
 391              	.LCFI10:
 392              		.cfi_def_cfa_offset 32
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI11:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 366:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count  = 0U;
 397              		.loc 1 366 0
 398 0008 4FF00003 		mov	r3, #0
 399 000c 7B61     		str	r3, [r7, #20]
 367:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 368:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 400              		.loc 1 368 0
 401 000e 4FF4A043 		mov	r3, #20480
 402 0012 C4F60103 		movt	r3, 18433
 403 0016 3B61     		str	r3, [r7, #16]
 369:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_4>>> */
 370:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offset as per node ID */
 371:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 404              		.loc 1 371 0
 405 0018 7B68     		ldr	r3, [r7, #4]
 406 001a 9B68     		ldr	r3, [r3, #8]
 407 001c FB60     		str	r3, [r7, #12]
 372:../Dave/Generated/src/CAN001/CAN001.c ****  
 373:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel has finished initialization */
 374:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 408              		.loc 1 374 0
 409 001e 00BF     		nop
 410              	.L16:
 411              		.loc 1 374 0 is_stmt 0 discriminator 1
 412 0020 4FF48043 		mov	r3, #16384
 413 0024 C4F60103 		movt	r3, 18433
 414 0028 D3F8C431 		ldr	r3, [r3, #452]
 415 002c 03F48073 		and	r3, r3, #256
 416 0030 002B     		cmp	r3, #0
 417 0032 F5D1     		bne	.L16
 375:../Dave/Generated/src/CAN001/CAN001.c **** 	{}
 376:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for node configuration */
 377:../Dave/Generated/src/CAN001/CAN001.c ****    /* Enable Alert and last error code interrupt */
 378:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR |= ((uint32_t)CAN_NODE_NCR_INIT_Msk | (uint32_t)CAN_NODE_NCR_CCE_Msk);
 418              		.loc 1 378 0 is_stmt 1
 419 0034 FB68     		ldr	r3, [r7, #12]
 420 0036 1B68     		ldr	r3, [r3, #0]
 421 0038 43F04102 		orr	r2, r3, #65
 422 003c FB68     		ldr	r3, [r7, #12]
 423 003e 1A60     		str	r2, [r3, #0]
 379:../Dave/Generated/src/CAN001/CAN001.c ****   /* Configure bit timing register */
 380:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 424              		.loc 1 380 0
 425 0040 7B68     		ldr	r3, [r7, #4]
 426 0042 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 427 0044 4FEAC332 		lsl	r2, r3, #15
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 382:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG2 << \
 428              		.loc 1 382 0
 429 0048 7B68     		ldr	r3, [r7, #4]
 430 004a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 431 004c 4FEA0333 		lsl	r3, r3, #12
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 432              		.loc 1 381 0
 433 0050 1A43     		orrs	r2, r2, r3
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 384:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG1 << \
 434              		.loc 1 384 0
 435 0052 7B68     		ldr	r3, [r7, #4]
 436 0054 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 437 0056 4FEA0323 		lsl	r3, r3, #8
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 438              		.loc 1 383 0
 439 005a 1A43     		orrs	r2, r2, r3
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 386:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.SyncJumpWidth << \
 440              		.loc 1 386 0
 441 005c 7B68     		ldr	r3, [r7, #4]
 442 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 443 0060 4FEA8313 		lsl	r3, r3, #6
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 444              		.loc 1 385 0
 445 0064 1A43     		orrs	r2, r2, r3
 387:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 388:../Dave/Generated/src/CAN001/CAN001.c ****                          (uint32_t)Handle->BaudRate.BaudRatePresc;
 446              		.loc 1 388 0
 447 0066 7B68     		ldr	r3, [r7, #4]
 448 0068 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 387:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 449              		.loc 1 387 0
 450 006a 1A43     		orrs	r2, r2, r3
 380:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 451              		.loc 1 380 0
 452 006c FB68     		ldr	r3, [r7, #12]
 453 006e 1A61     		str	r2, [r3, #16]
 389:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check whether loop back mode is to be enabled */
 390:../Dave/Generated/src/CAN001/CAN001.c ****   if ( Handle->LoopBackModeEn == CAN001_ENABLE)
 454              		.loc 1 390 0
 455 0070 7B68     		ldr	r3, [r7, #4]
 456 0072 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 457 0074 012B     		cmp	r3, #1
 458 0076 05D1     		bne	.L17
 391:../Dave/Generated/src/CAN001/CAN001.c ****   {
 392:../Dave/Generated/src/CAN001/CAN001.c ****     SET_BIT(CAN_NodexRegs->NPCR, CAN_NODE_NPCR_LBM_Pos);
 459              		.loc 1 392 0
 460 0078 FB68     		ldr	r3, [r7, #12]
 461 007a DB68     		ldr	r3, [r3, #12]
 462 007c 43F48072 		orr	r2, r3, #256
 463 0080 FB68     		ldr	r3, [r7, #12]
 464 0082 DA60     		str	r2, [r3, #12]
 465              	.L17:
 393:../Dave/Generated/src/CAN001/CAN001.c ****   }
 394:../Dave/Generated/src/CAN001/CAN001.c ****   /* Allocate required number of message object to node list 
 395:../Dave/Generated/src/CAN001/CAN001.c ****     * and configure message object */
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 466              		.loc 1 396 0
 467 0084 4FF00003 		mov	r3, #0
 468 0088 7B61     		str	r3, [r7, #20]
 469 008a 27E0     		b	.L18
 470              	.L19:
 397:../Dave/Generated/src/CAN001/CAN001.c ****   {
 398:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lAllocateMOtoNodeList(Handle->NodeID, (uint8_t)(Handle->FirstMOMapping + Count));
 471              		.loc 1 398 0 discriminator 2
 472 008c 7B68     		ldr	r3, [r7, #4]
 473 008e 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 474 0090 7B68     		ldr	r3, [r7, #4]
 475 0092 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 476 0094 7B69     		ldr	r3, [r7, #20]
 477 0096 DBB2     		uxtb	r3, r3
 478 0098 CB18     		adds	r3, r1, r3
 479 009a DBB2     		uxtb	r3, r3
 480 009c 1046     		mov	r0, r2
 481 009e 1946     		mov	r1, r3
 482 00a0 FFF7FEFF 		bl	CAN001_lAllocateMOtoNodeList
 399:../Dave/Generated/src/CAN001/CAN001.c ****     MsgNo = (uint8_t)(Handle->FirstMOMapping + Count);
 483              		.loc 1 399 0 discriminator 2
 484 00a4 7B68     		ldr	r3, [r7, #4]
 485 00a6 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 486 00a8 7B69     		ldr	r3, [r7, #20]
 487 00aa DBB2     		uxtb	r3, r3
 488 00ac D318     		adds	r3, r2, r3
 489 00ae FB72     		strb	r3, [r7, #11]
 400:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 490              		.loc 1 400 0 discriminator 2
 491 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 492 00b2 03F11073 		add	r3, r3, #37748736
 493 00b6 03F52863 		add	r3, r3, #2688
 494 00ba 4FEA4313 		lsl	r3, r3, #5
 495 00be 3B61     		str	r3, [r7, #16]
 401:../Dave/Generated/src/CAN001/CAN001.c **** 	 /* Configure MPN */
 402:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 496              		.loc 1 402 0 discriminator 2
 497 00c0 7B68     		ldr	r3, [r7, #4]
 498 00c2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 499 00c4 4FEA4332 		lsl	r2, r3, #13
 403:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 404:../Dave/Generated/src/CAN001/CAN001.c ****                           (Count << CAN_MO_MOIPR_MPN_Pos));
 500              		.loc 1 404 0 discriminator 2
 501 00c8 7B69     		ldr	r3, [r7, #20]
 502 00ca 4FEA0323 		lsl	r3, r3, #8
 403:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 503              		.loc 1 403 0 discriminator 2
 504 00ce 1A43     		orrs	r2, r2, r3
 402:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 505              		.loc 1 402 0 discriminator 2
 506 00d0 3B69     		ldr	r3, [r7, #16]
 507 00d2 9A60     		str	r2, [r3, #8]
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 508              		.loc 1 396 0 discriminator 2
 509 00d4 7B69     		ldr	r3, [r7, #20]
 510 00d6 03F10103 		add	r3, r3, #1
 511 00da 7B61     		str	r3, [r7, #20]
 512              	.L18:
 396:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 513              		.loc 1 396 0 is_stmt 0 discriminator 1
 514 00dc 7B68     		ldr	r3, [r7, #4]
 515 00de DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 516 00e0 1A46     		mov	r2, r3
 517 00e2 7B69     		ldr	r3, [r7, #20]
 518 00e4 9A42     		cmp	r2, r3
 519 00e6 D1D8     		bhi	.L19
 405:../Dave/Generated/src/CAN001/CAN001.c ****   }
 406:../Dave/Generated/src/CAN001/CAN001.c **** 
 407:../Dave/Generated/src/CAN001/CAN001.c **** }
 520              		.loc 1 407 0 is_stmt 1
 521 00e8 07F11807 		add	r7, r7, #24
 522 00ec BD46     		mov	sp, r7
 523 00ee 80BD     		pop	{r7, pc}
 524              		.cfi_endproc
 525              	.LFE120:
 527              		.section	.text.CAN001_Init,"ax",%progbits
 528              		.align	2
 529              		.global	CAN001_Init
 530              		.thumb
 531              		.thumb_func
 533              	CAN001_Init:
 534              	.LFB121:
 408:../Dave/Generated/src/CAN001/CAN001.c ****  
 409:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 410:../Dave/Generated/src/CAN001/CAN001.c **** **                      Public Function Definitions                           **
 411:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 412:../Dave/Generated/src/CAN001/CAN001.c **** 
 413:../Dave/Generated/src/CAN001/CAN001.c **** 
 414:../Dave/Generated/src/CAN001/CAN001.c **** /** @ingroup CAN001_publicfunc
 415:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 416:../Dave/Generated/src/CAN001/CAN001.c ****  */
 417:../Dave/Generated/src/CAN001/CAN001.c **** 
 418:../Dave/Generated/src/CAN001/CAN001.c **** 
 419:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 420:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_Init(void)
 421:../Dave/Generated/src/CAN001/CAN001.c **** {
 535              		.loc 1 421 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI12:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 00AF     		add	r7, sp, #0
 545              	.LCFI13:
 546              		.cfi_def_cfa_register 7
 422:../Dave/Generated/src/CAN001/CAN001.c ****    /* Calling CANGLOBAL App Initialization */
 423:../Dave/Generated/src/CAN001/CAN001.c ****    CANGLOBAL_Init();
 547              		.loc 1 423 0
 548 0004 FFF7FEFF 		bl	CANGLOBAL_Init
 424:../Dave/Generated/src/CAN001/CAN001.c **** 
 425:../Dave/Generated/src/CAN001/CAN001.c ****    /* Node1 initialization */
 426:../Dave/Generated/src/CAN001/CAN001.c ****    CAN001_lNodeInit(&CAN001_Handle0);
 549              		.loc 1 426 0
 550 0008 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 551 000c C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 552 0010 FFF7FEFF 		bl	CAN001_lNodeInit
 427:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO1 Initialization */
 428:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_1,1U);
 553              		.loc 1 428 0
 554 0014 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 555 0018 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 556 001c 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_1
 557 0020 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_1
 558 0024 4FF00102 		mov	r2, #1
 559 0028 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 429:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO2 Initialization */
 430:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_2,2U);
 560              		.loc 1 430 0
 561 002c 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 562 0030 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 563 0034 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_2
 564 0038 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_2
 565 003c 4FF00202 		mov	r2, #2
 566 0040 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 431:../Dave/Generated/src/CAN001/CAN001.c ****    /* Enable receive interrupt */
 432:../Dave/Generated/src/CAN001/CAN001.c ****    EnableMOInterrupt(CAN001_Handle0,(uint32_t)CAN_MO_RECEIVE_INTERRUPT,2);
 567              		.loc 1 432 0
 568 0044 40F20003 		movw	r3, #:lower16:CAN001_Handle0
 569 0048 C0F20003 		movt	r3, #:upper16:CAN001_Handle0
 570 004c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 571 004e 03F10103 		add	r3, r3, #1
 572 0052 4FEA4313 		lsl	r3, r3, #5
 573 0056 03F19043 		add	r3, r3, #1207959552
 574 005a 03F5A833 		add	r3, r3, #86016
 575 005e 1A46     		mov	r2, r3
 576 0060 40F20003 		movw	r3, #:lower16:CAN001_Handle0
 577 0064 C0F20003 		movt	r3, #:upper16:CAN001_Handle0
 578 0068 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 579 006a 03F10103 		add	r3, r3, #1
 580 006e 4FEA4313 		lsl	r3, r3, #5
 581 0072 03F19043 		add	r3, r3, #1207959552
 582 0076 03F5A833 		add	r3, r3, #86016
 583 007a 1B68     		ldr	r3, [r3, #0]
 584 007c 43F48033 		orr	r3, r3, #65536
 585 0080 1360     		str	r3, [r2, #0]
 433:../Dave/Generated/src/CAN001/CAN001.c ****   
 434:../Dave/Generated/src/CAN001/CAN001.c **** }
 586              		.loc 1 434 0
 587 0082 80BD     		pop	{r7, pc}
 588              		.cfi_endproc
 589              	.LFE121:
 591              		.section	.text.CAN001_NodeDeInit,"ax",%progbits
 592              		.align	2
 593              		.global	CAN001_NodeDeInit
 594              		.thumb
 595              		.thumb_func
 597              	CAN001_NodeDeInit:
 598              	.LFB122:
 435:../Dave/Generated/src/CAN001/CAN001.c ****   
 436:../Dave/Generated/src/CAN001/CAN001.c ****        
 437:../Dave/Generated/src/CAN001/CAN001.c ****   
 438:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will deinitialize node with the given handle */
 439:../Dave/Generated/src/CAN001/CAN001.c **** /*<<<DD_CAN001_API_2>>>*/ 
 440:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_NodeDeInit(const CAN001_HandleType* Handle)
 441:../Dave/Generated/src/CAN001/CAN001.c **** {
 599              		.loc 1 441 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 32
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              	.LCFI14:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 88B0     		sub	sp, sp, #32
 609              	.LCFI15:
 610              		.cfi_def_cfa_offset 40
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI16:
 613              		.cfi_def_cfa_register 7
 614 0006 7860     		str	r0, [r7, #4]
 442:../Dave/Generated/src/CAN001/CAN001.c ****   int32_t Count = 0;
 615              		.loc 1 442 0
 616 0008 4FF00003 		mov	r3, #0
 617 000c FB61     		str	r3, [r7, #28]
 443:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 444:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t*	MsgPndRegOffset = 0;
 618              		.loc 1 444 0
 619 000e 4FF00003 		mov	r3, #0
 620 0012 BB61     		str	r3, [r7, #24]
 445:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 621              		.loc 1 445 0
 622 0014 4FF4A043 		mov	r3, #20480
 623 0018 C4F60103 		movt	r3, 18433
 624 001c 7B61     		str	r3, [r7, #20]
 446:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offser as per node ID */
 447:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 625              		.loc 1 447 0
 626 001e 7B68     		ldr	r3, [r7, #4]
 627 0020 9B68     		ldr	r3, [r3, #8]
 628 0022 3B61     		str	r3, [r7, #16]
 448:../Dave/Generated/src/CAN001/CAN001.c **** 
 449:../Dave/Generated/src/CAN001/CAN001.c ****   /* Reset all message object registers and deallocate to free list */
 450:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 629              		.loc 1 450 0
 630 0024 7B68     		ldr	r3, [r7, #4]
 631 0026 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 632 0028 03F1FF33 		add	r3, r3, #-1
 633 002c FB61     		str	r3, [r7, #28]
 634 002e 36E0     		b	.L22
 635              	.L23:
 451:../Dave/Generated/src/CAN001/CAN001.c ****   {
 452:../Dave/Generated/src/CAN001/CAN001.c **** 	MsgNo = (uint8_t)(Handle->FirstMOMapping+(uint32_t)Count);
 636              		.loc 1 452 0 discriminator 2
 637 0030 7B68     		ldr	r3, [r7, #4]
 638 0032 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 639 0034 FB69     		ldr	r3, [r7, #28]
 640 0036 DBB2     		uxtb	r3, r3
 641 0038 D318     		adds	r3, r2, r3
 642 003a FB73     		strb	r3, [r7, #15]
 453:../Dave/Generated/src/CAN001/CAN001.c ****     /* Mapping to message object offset value*/
 454:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 643              		.loc 1 454 0 discriminator 2
 644 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 645 003e 03F11073 		add	r3, r3, #37748736
 646 0042 03F52863 		add	r3, r3, #2688
 647 0046 4FEA4313 		lsl	r3, r3, #5
 648 004a 7B61     		str	r3, [r7, #20]
 455:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset all message objects registers */
 456:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOFCR =  (0x00000000U);			 		
 649              		.loc 1 456 0 discriminator 2
 650 004c 7B69     		ldr	r3, [r7, #20]
 651 004e 4FF00002 		mov	r2, #0
 652 0052 1A60     		str	r2, [r3, #0]
 457:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR &= (0x000000FFU);			 
 653              		.loc 1 457 0 discriminator 2
 654 0054 7B69     		ldr	r3, [r7, #20]
 655 0056 9B68     		ldr	r3, [r3, #8]
 656 0058 DAB2     		uxtb	r2, r3
 657 005a 7B69     		ldr	r3, [r7, #20]
 658 005c 9A60     		str	r2, [r3, #8]
 458:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAMR = (0x3FFFFFFFU);			 
 659              		.loc 1 458 0 discriminator 2
 660 005e 7B69     		ldr	r3, [r7, #20]
 661 0060 6FF04042 		mvn	r2, #-1073741824
 662 0064 DA60     		str	r2, [r3, #12]
 459:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAL = (0x00000000U);	
 663              		.loc 1 459 0 discriminator 2
 664 0066 7B69     		ldr	r3, [r7, #20]
 665 0068 4FF00002 		mov	r2, #0
 666 006c 1A61     		str	r2, [r3, #16]
 460:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAH = (0x00000000U);	
 667              		.loc 1 460 0 discriminator 2
 668 006e 7B69     		ldr	r3, [r7, #20]
 669 0070 4FF00002 		mov	r2, #0
 670 0074 5A61     		str	r2, [r3, #20]
 461:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAR = (0x00000000U);   
 671              		.loc 1 461 0 discriminator 2
 672 0076 7B69     		ldr	r3, [r7, #20]
 673 0078 4FF00002 		mov	r2, #0
 674 007c 9A61     		str	r2, [r3, #24]
 462:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (0x00000FFFU);
 675              		.loc 1 462 0 discriminator 2
 676 007e 7B69     		ldr	r3, [r7, #20]
 677 0080 40F6FF72 		movw	r2, #4095
 678 0084 DA61     		str	r2, [r3, #28]
 463:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lDeallocateMsgObj(Handle->FirstMOMapping+(uint32_t)Count);
 679              		.loc 1 463 0 discriminator 2
 680 0086 7B68     		ldr	r3, [r7, #4]
 681 0088 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 682 008a 1A46     		mov	r2, r3
 683 008c FB69     		ldr	r3, [r7, #28]
 684 008e D318     		adds	r3, r2, r3
 685 0090 1846     		mov	r0, r3
 686 0092 FFF7FEFF 		bl	CAN001_lDeallocateMsgObj
 450:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 687              		.loc 1 450 0 discriminator 2
 688 0096 FB69     		ldr	r3, [r7, #28]
 689 0098 03F1FF33 		add	r3, r3, #-1
 690 009c FB61     		str	r3, [r7, #28]
 691              	.L22:
 450:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 692              		.loc 1 450 0 is_stmt 0 discriminator 1
 693 009e FB69     		ldr	r3, [r7, #28]
 694 00a0 002B     		cmp	r3, #0
 695 00a2 C5DA     		bge	.L23
 464:../Dave/Generated/src/CAN001/CAN001.c ****   }
 465:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for disconnecting the node */
 466:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR = (0x00000041U);
 696              		.loc 1 466 0 is_stmt 1
 697 00a4 3B69     		ldr	r3, [r7, #16]
 698 00a6 4FF04102 		mov	r2, #65
 699 00aa 1A60     		str	r2, [r3, #0]
 467:../Dave/Generated/src/CAN001/CAN001.c ****   /* reset all node registers */
 468:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR = (0x00000000U);
 700              		.loc 1 468 0
 701 00ac 3B69     		ldr	r3, [r7, #16]
 702 00ae 4FF00002 		mov	r2, #0
 703 00b2 5A60     		str	r2, [r3, #4]
 469:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NPCR &= (0x0000000FU);
 704              		.loc 1 469 0
 705 00b4 3B69     		ldr	r3, [r7, #16]
 706 00b6 DB68     		ldr	r3, [r3, #12]
 707 00b8 03F00F02 		and	r2, r3, #15
 708 00bc 3B69     		ldr	r3, [r7, #16]
 709 00be DA60     		str	r2, [r3, #12]
 470:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NECNT = (0x00600000U);
 710              		.loc 1 470 0
 711 00c0 3B69     		ldr	r3, [r7, #16]
 712 00c2 4FF4C002 		mov	r2, #6291456
 713 00c6 5A61     		str	r2, [r3, #20]
 471:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NFCR = (0x00000000U);
 714              		.loc 1 471 0
 715 00c8 3B69     		ldr	r3, [r7, #16]
 716 00ca 4FF00002 		mov	r2, #0
 717 00ce 9A61     		str	r2, [r3, #24]
 472:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = (0x00000000U);
 718              		.loc 1 472 0
 719 00d0 3B69     		ldr	r3, [r7, #16]
 720 00d2 4FF00002 		mov	r2, #0
 721 00d6 1A61     		str	r2, [r3, #16]
 473:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 722              		.loc 1 473 0
 723 00d8 7B68     		ldr	r3, [r7, #4]
 724 00da 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 725 00dc 1A46     		mov	r2, r3
 726 00de 45F25003 		movw	r3, #20560
 727 00e2 C1F20023 		movt	r3, 4608
 728 00e6 D318     		adds	r3, r2, r3
 729 00e8 4FEA8303 		lsl	r3, r3, #2
 730 00ec BB61     		str	r3, [r7, #24]
 474:../Dave/Generated/src/CAN001/CAN001.c ****   (*MsgPndRegOffset) = (0x00000000U);
 731              		.loc 1 474 0
 732 00ee BB69     		ldr	r3, [r7, #24]
 733 00f0 4FF00002 		mov	r2, #0
 734 00f4 1A60     		str	r2, [r3, #0]
 475:../Dave/Generated/src/CAN001/CAN001.c ****   
 476:../Dave/Generated/src/CAN001/CAN001.c **** }    
 735              		.loc 1 476 0
 736 00f6 07F12007 		add	r7, r7, #32
 737 00fa BD46     		mov	sp, r7
 738 00fc 80BD     		pop	{r7, pc}
 739              		.cfi_endproc
 740              	.LFE122:
 742 00fe 00BF     		.section	.text.CAN001_ConfigMsgObj,"ax",%progbits
 743              		.align	2
 744              		.global	CAN001_ConfigMsgObj
 745              		.thumb
 746              		.thumb_func
 748              	CAN001_ConfigMsgObj:
 749              	.LFB123:
 477:../Dave/Generated/src/CAN001/CAN001.c ****  /* 		
 478:../Dave/Generated/src/CAN001/CAN001.c ****  *  			 This function is will configure message object as per the message handle
 479:../Dave/Generated/src/CAN001/CAN001.c ****  *  passed to the function. Function will either Enable or Disable as per
 480:../Dave/Generated/src/CAN001/CAN001.c ****  *  input parameter
 481:../Dave/Generated/src/CAN001/CAN001.c ****  */
 482:../Dave/Generated/src/CAN001/CAN001.c **** 
 483:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ConfigMsgObj
 484:../Dave/Generated/src/CAN001/CAN001.c **** (
 485:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 486:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* SwMsgObjptr,
 487:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 488:../Dave/Generated/src/CAN001/CAN001.c ****  )
 489:../Dave/Generated/src/CAN001/CAN001.c **** {
 750              		.loc 1 489 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 32
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754 0000 80B5     		push	{r7, lr}
 755              	.LCFI17:
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 0002 88B0     		sub	sp, sp, #32
 760              	.LCFI18:
 761              		.cfi_def_cfa_offset 40
 762 0004 00AF     		add	r7, sp, #0
 763              	.LCFI19:
 764              		.cfi_def_cfa_register 7
 765 0006 F860     		str	r0, [r7, #12]
 766 0008 B960     		str	r1, [r7, #8]
 767 000a 1346     		mov	r3, r2
 768 000c FB71     		strb	r3, [r7, #7]
 490:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_MO_NOT_FOUND;
 769              		.loc 1 490 0
 770 000e 4FF00203 		mov	r3, #2
 771 0012 FB61     		str	r3, [r7, #28]
 491:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 772              		.loc 1 491 0
 773 0014 FB68     		ldr	r3, [r7, #12]
 774 0016 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 775 0018 FB79     		ldrb	r3, [r7, #7]
 776 001a D318     		adds	r3, r2, r3
 777 001c DBB2     		uxtb	r3, r3
 778 001e 03F1FF33 		add	r3, r3, #-1
 779 0022 FB76     		strb	r3, [r7, #27]
 492:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 493:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 494:../Dave/Generated/src/CAN001/CAN001.c ****                       GET_MO_OFFSET(MsgNo);
 780              		.loc 1 494 0
 781 0024 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 782 0026 03F11073 		add	r3, r3, #37748736
 783 002a 03F52863 		add	r3, r3, #2688
 784 002e 4FEA4313 		lsl	r3, r3, #5
 493:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 785              		.loc 1 493 0
 786 0032 7B61     		str	r3, [r7, #20]
 495:../Dave/Generated/src/CAN001/CAN001.c ****                       
 496:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 497:../Dave/Generated/src/CAN001/CAN001.c ****     
 498:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 787              		.loc 1 498 0
 788 0034 BB68     		ldr	r3, [r7, #8]
 789 0036 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 790 0038 002B     		cmp	r3, #0
 791 003a 03D0     		beq	.L25
 499:../Dave/Generated/src/CAN001/CAN001.c ****                                         (SwMsgObjptr->IDExten != (uint8_t)EXTENDEDTYPE))
 792              		.loc 1 499 0 discriminator 1
 793 003c BB68     		ldr	r3, [r7, #8]
 794 003e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 498:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 795              		.loc 1 498 0 discriminator 1
 796 0040 012B     		cmp	r3, #1
 797 0042 0FD1     		bne	.L26
 798              	.L25:
 500:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjEN != CAN001_ENABLE) && (SwMsgObjptr->MsgObjEN != CAN001_DISABLE))
 799              		.loc 1 500 0
 800 0044 BB68     		ldr	r3, [r7, #8]
 801 0046 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 802 0048 012B     		cmp	r3, #1
 803 004a 03D0     		beq	.L27
 804              		.loc 1 500 0 is_stmt 0 discriminator 1
 805 004c BB68     		ldr	r3, [r7, #8]
 806 004e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 807 0050 002B     		cmp	r3, #0
 808 0052 07D1     		bne	.L26
 809              	.L27:
 501:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjType != RECMSGOBJ) && (SwMsgObjptr->MsgObjType != TRANSMSGOBJ)))
 810              		.loc 1 501 0 is_stmt 1
 811 0054 BB68     		ldr	r3, [r7, #8]
 812 0056 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 813 0058 002B     		cmp	r3, #0
 814 005a 07D0     		beq	.L28
 815              		.loc 1 501 0 is_stmt 0 discriminator 1
 816 005c BB68     		ldr	r3, [r7, #8]
 817 005e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 818 0060 012B     		cmp	r3, #1
 819 0062 03D0     		beq	.L28
 820              	.L26:
 502:../Dave/Generated/src/CAN001/CAN001.c ****   {
 503:../Dave/Generated/src/CAN001/CAN001.c ****     Error =  (uint32_t)CAN001_INVALID_INPUT;
 821              		.loc 1 503 0 is_stmt 1
 822 0064 4FF00603 		mov	r3, #6
 823 0068 FB61     		str	r3, [r7, #28]
 824 006a 1AE0     		b	.L29
 825              	.L28:
 504:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 505:../Dave/Generated/src/CAN001/CAN001.c ****   }
 506:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is to be disabled */
 507:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_3_1>>>*/
 508:../Dave/Generated/src/CAN001/CAN001.c ****   else if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE)
 826              		.loc 1 508 0
 827 006c BB68     		ldr	r3, [r7, #8]
 828 006e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 829 0070 002B     		cmp	r3, #0
 830 0072 07D1     		bne	.L30
 509:../Dave/Generated/src/CAN001/CAN001.c ****   {
 510:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset MSGVAL bit */
 511:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 831              		.loc 1 511 0
 832 0074 7B69     		ldr	r3, [r7, #20]
 833 0076 4FF02002 		mov	r2, #32
 834 007a DA61     		str	r2, [r3, #28]
 512:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 835              		.loc 1 512 0
 836 007c 4FF00003 		mov	r3, #0
 837 0080 FB61     		str	r3, [r7, #28]
 838 0082 0EE0     		b	.L29
 839              	.L30:
 513:../Dave/Generated/src/CAN001/CAN001.c ****   } /* if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE) */
 514:../Dave/Generated/src/CAN001/CAN001.c ****   else
 515:../Dave/Generated/src/CAN001/CAN001.c ****   {
 516:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lConfigMORegs(SwMsgObjptr, (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U)));
 840              		.loc 1 516 0
 841 0084 FB68     		ldr	r3, [r7, #12]
 842 0086 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 843 0088 FB79     		ldrb	r3, [r7, #7]
 844 008a D318     		adds	r3, r2, r3
 845 008c DBB2     		uxtb	r3, r3
 846 008e 03F1FF33 		add	r3, r3, #-1
 847 0092 DBB2     		uxtb	r3, r3
 848 0094 B868     		ldr	r0, [r7, #8]
 849 0096 1946     		mov	r1, r3
 850 0098 FFF7FEFF 		bl	CAN001_lConfigMORegs
 517:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 851              		.loc 1 517 0
 852 009c 4FF00003 		mov	r3, #0
 853 00a0 FB61     		str	r3, [r7, #28]
 854              	.L29:
 518:../Dave/Generated/src/CAN001/CAN001.c ****   } /*if (SwMsgObjptr->MsgObjEN == CAN001_ENABLE)*/
 519:../Dave/Generated/src/CAN001/CAN001.c ****   
 520:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 855              		.loc 1 520 0
 856 00a2 FB69     		ldr	r3, [r7, #28]
 521:../Dave/Generated/src/CAN001/CAN001.c **** }
 857              		.loc 1 521 0
 858 00a4 1846     		mov	r0, r3
 859 00a6 07F12007 		add	r7, r7, #32
 860 00aa BD46     		mov	sp, r7
 861 00ac 80BD     		pop	{r7, pc}
 862              		.cfi_endproc
 863              	.LFE123:
 865 00ae 00BF     		.section	.text.CAN001_SendDataFrame,"ax",%progbits
 866              		.align	2
 867              		.global	CAN001_SendDataFrame
 868              		.thumb
 869              		.thumb_func
 871              	CAN001_SendDataFrame:
 872              	.LFB124:
 522:../Dave/Generated/src/CAN001/CAN001.c **** 	
 523:../Dave/Generated/src/CAN001/CAN001.c **** 
 524:../Dave/Generated/src/CAN001/CAN001.c ****  /*
 525:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to transmit message object 
 526:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending data frame
 527:../Dave/Generated/src/CAN001/CAN001.c ****  */
 528:../Dave/Generated/src/CAN001/CAN001.c **** 
 529:../Dave/Generated/src/CAN001/CAN001.c ****  
 530:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendDataFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 531:../Dave/Generated/src/CAN001/CAN001.c **** {
 873              		.loc 1 531 0
 874              		.cfi_startproc
 875              		@ args = 0, pretend = 0, frame = 24
 876              		@ frame_needed = 1, uses_anonymous_args = 0
 877              		@ link register save eliminated.
 878 0000 80B4     		push	{r7}
 879              	.LCFI20:
 880              		.cfi_def_cfa_offset 4
 881              		.cfi_offset 7, -4
 882 0002 87B0     		sub	sp, sp, #28
 883              	.LCFI21:
 884              		.cfi_def_cfa_offset 32
 885 0004 00AF     		add	r7, sp, #0
 886              	.LCFI22:
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 889 0008 0B46     		mov	r3, r1
 890 000a FB70     		strb	r3, [r7, #3]
 532:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 891              		.loc 1 532 0
 892 000c 4FF00503 		mov	r3, #5
 893 0010 7B61     		str	r3, [r7, #20]
 533:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 894              		.loc 1 533 0
 895 0012 7B68     		ldr	r3, [r7, #4]
 896 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 897 0016 FB78     		ldrb	r3, [r7, #3]
 898 0018 D318     		adds	r3, r2, r3
 899 001a DBB2     		uxtb	r3, r3
 900 001c 03F1FF33 		add	r3, r3, #-1
 901 0020 FB74     		strb	r3, [r7, #19]
 534:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 535:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 536:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 902              		.loc 1 536 0
 903 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 904 0024 03F11073 		add	r3, r3, #37748736
 905 0028 03F52863 		add	r3, r3, #2688
 906 002c 4FEA4313 		lsl	r3, r3, #5
 535:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 907              		.loc 1 535 0
 908 0030 FB60     		str	r3, [r7, #12]
 537:../Dave/Generated/src/CAN001/CAN001.c ****   
 538:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 539:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 540:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_1>>>*/
 541:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 909              		.loc 1 541 0
 910 0032 FB68     		ldr	r3, [r7, #12]
 911 0034 DB69     		ldr	r3, [r3, #28]
 912 0036 03F40063 		and	r3, r3, #2048
 913 003a 4FEAD323 		lsr	r3, r3, #11
 914 003e 012B     		cmp	r3, #1
 915 0040 03D0     		beq	.L33
 542:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 543:../Dave/Generated/src/CAN001/CAN001.c ****   {
 544:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 916              		.loc 1 544 0
 917 0042 4FF00103 		mov	r3, #1
 918 0046 7B61     		str	r3, [r7, #20]
 919 0048 1EE0     		b	.L34
 920              	.L33:
 545:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 546:../Dave/Generated/src/CAN001/CAN001.c ****   }
 547:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 548:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 921              		.loc 1 548 0
 922 004a FB68     		ldr	r3, [r7, #12]
 923 004c DB69     		ldr	r3, [r3, #28]
 924 004e 03F02003 		and	r3, r3, #32
 925 0052 4FEA5313 		lsr	r3, r3, #5
 926 0056 002B     		cmp	r3, #0
 927 0058 03D1     		bne	.L35
 549:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    
 550:../Dave/Generated/src/CAN001/CAN001.c ****   {
 551:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 928              		.loc 1 551 0
 929 005a 4FF00303 		mov	r3, #3
 930 005e 7B61     		str	r3, [r7, #20]
 931 0060 12E0     		b	.L34
 932              	.L35:
 552:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 553:../Dave/Generated/src/CAN001/CAN001.c ****   }
 554:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 555:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_2>>>*/
 556:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 933              		.loc 1 556 0
 934 0062 FB68     		ldr	r3, [r7, #12]
 935 0064 DB69     		ldr	r3, [r3, #28]
 936 0066 03F48073 		and	r3, r3, #256
 937 006a 4FEA1323 		lsr	r3, r3, #8
 938 006e 012B     		cmp	r3, #1
 939 0070 03D1     		bne	.L36
 557:../Dave/Generated/src/CAN001/CAN001.c ****                                                  CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 558:../Dave/Generated/src/CAN001/CAN001.c ****   {
 559:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 940              		.loc 1 559 0
 941 0072 4FF00403 		mov	r3, #4
 942 0076 7B61     		str	r3, [r7, #20]
 943 0078 06E0     		b	.L34
 944              	.L36:
 560:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 561:../Dave/Generated/src/CAN001/CAN001.c ****   }
 562:../Dave/Generated/src/CAN001/CAN001.c ****   else
 563:../Dave/Generated/src/CAN001/CAN001.c ****   {
 564:../Dave/Generated/src/CAN001/CAN001.c ****     /* set TXRQ bit */
 565:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_4_3>>>*/
 566:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 945              		.loc 1 566 0
 946 007a FB68     		ldr	r3, [r7, #12]
 947 007c 4FF08072 		mov	r2, #16777216
 948 0080 DA61     		str	r2, [r3, #28]
 567:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 949              		.loc 1 567 0
 950 0082 4FF00003 		mov	r3, #0
 951 0086 7B61     		str	r3, [r7, #20]
 952              	.L34:
 568:../Dave/Generated/src/CAN001/CAN001.c ****   }
 569:../Dave/Generated/src/CAN001/CAN001.c ****  
 570:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 953              		.loc 1 570 0
 954 0088 7B69     		ldr	r3, [r7, #20]
 571:../Dave/Generated/src/CAN001/CAN001.c **** }
 955              		.loc 1 571 0
 956 008a 1846     		mov	r0, r3
 957 008c 07F11C07 		add	r7, r7, #28
 958 0090 BD46     		mov	sp, r7
 959 0092 80BC     		pop	{r7}
 960 0094 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE124:
 964 0096 00BF     		.section	.text.CAN001_SendRemoteFrame,"ax",%progbits
 965              		.align	2
 966              		.global	CAN001_SendRemoteFrame
 967              		.thumb
 968              		.thumb_func
 970              	CAN001_SendRemoteFrame:
 971              	.LFB125:
 572:../Dave/Generated/src/CAN001/CAN001.c **** 		
 573:../Dave/Generated/src/CAN001/CAN001.c **** /*
 574:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to receive message object     
 575:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending remote frame
 576:../Dave/Generated/src/CAN001/CAN001.c ****  */
 577:../Dave/Generated/src/CAN001/CAN001.c **** 
 578:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendRemoteFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 579:../Dave/Generated/src/CAN001/CAN001.c **** {
 972              		.loc 1 579 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 24
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 977 0000 80B4     		push	{r7}
 978              	.LCFI23:
 979              		.cfi_def_cfa_offset 4
 980              		.cfi_offset 7, -4
 981 0002 87B0     		sub	sp, sp, #28
 982              	.LCFI24:
 983              		.cfi_def_cfa_offset 32
 984 0004 00AF     		add	r7, sp, #0
 985              	.LCFI25:
 986              		.cfi_def_cfa_register 7
 987 0006 7860     		str	r0, [r7, #4]
 988 0008 0B46     		mov	r3, r1
 989 000a FB70     		strb	r3, [r7, #3]
 580:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = 0U;
 990              		.loc 1 580 0
 991 000c 4FF00003 		mov	r3, #0
 992 0010 7B61     		str	r3, [r7, #20]
 581:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 993              		.loc 1 581 0
 994 0012 7B68     		ldr	r3, [r7, #4]
 995 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 996 0016 FB78     		ldrb	r3, [r7, #3]
 997 0018 D318     		adds	r3, r2, r3
 998 001a DBB2     		uxtb	r3, r3
 999 001c 03F1FF33 		add	r3, r3, #-1
 1000 0020 FB74     		strb	r3, [r7, #19]
 582:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 583:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 584:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1001              		.loc 1 584 0
 1002 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1003 0024 03F11073 		add	r3, r3, #37748736
 1004 0028 03F52863 		add	r3, r3, #2688
 1005 002c 4FEA4313 		lsl	r3, r3, #5
 583:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1006              		.loc 1 583 0
 1007 0030 FB60     		str	r3, [r7, #12]
 585:../Dave/Generated/src/CAN001/CAN001.c ****  
 586:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 587:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 588:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_1>>>*/
 589:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1008              		.loc 1 589 0
 1009 0032 FB68     		ldr	r3, [r7, #12]
 1010 0034 DB69     		ldr	r3, [r3, #28]
 1011 0036 03F40063 		and	r3, r3, #2048
 1012 003a 4FEAD323 		lsr	r3, r3, #11
 1013 003e 002B     		cmp	r3, #0
 1014 0040 03D0     		beq	.L39
 590:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 591:../Dave/Generated/src/CAN001/CAN001.c ****   {
 592:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1015              		.loc 1 592 0
 1016 0042 4FF00103 		mov	r3, #1
 1017 0046 7B61     		str	r3, [r7, #20]
 1018 0048 1EE0     		b	.L40
 1019              	.L39:
 593:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 594:../Dave/Generated/src/CAN001/CAN001.c ****   }
 595:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 596:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 1020              		.loc 1 596 0
 1021 004a FB68     		ldr	r3, [r7, #12]
 1022 004c DB69     		ldr	r3, [r3, #28]
 1023 004e 03F02003 		and	r3, r3, #32
 1024 0052 4FEA5313 		lsr	r3, r3, #5
 1025 0056 002B     		cmp	r3, #0
 1026 0058 03D1     		bne	.L41
 597:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    		
 598:../Dave/Generated/src/CAN001/CAN001.c ****   {
 599:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 1027              		.loc 1 599 0
 1028 005a 4FF00303 		mov	r3, #3
 1029 005e 7B61     		str	r3, [r7, #20]
 1030 0060 12E0     		b	.L40
 1031              	.L41:
 600:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 601:../Dave/Generated/src/CAN001/CAN001.c ****   }
 602:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 603:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_2>>>*/
 604:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 1032              		.loc 1 604 0
 1033 0062 FB68     		ldr	r3, [r7, #12]
 1034 0064 DB69     		ldr	r3, [r3, #28]
 1035 0066 03F48073 		and	r3, r3, #256
 1036 006a 4FEA1323 		lsr	r3, r3, #8
 1037 006e 012B     		cmp	r3, #1
 1038 0070 03D1     		bne	.L42
 605:../Dave/Generated/src/CAN001/CAN001.c ****                                                 CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 606:../Dave/Generated/src/CAN001/CAN001.c ****   {
 607:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1039              		.loc 1 607 0
 1040 0072 4FF00403 		mov	r3, #4
 1041 0076 7B61     		str	r3, [r7, #20]
 1042 0078 06E0     		b	.L40
 1043              	.L42:
 608:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error);
 609:../Dave/Generated/src/CAN001/CAN001.c ****   }
 610:../Dave/Generated/src/CAN001/CAN001.c ****   else
 611:../Dave/Generated/src/CAN001/CAN001.c ****   {
 612:../Dave/Generated/src/CAN001/CAN001.c ****     /* Put transmit request to message object */
 613:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_5_3>>>*/
 614:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 1044              		.loc 1 614 0
 1045 007a FB68     		ldr	r3, [r7, #12]
 1046 007c 4FF08072 		mov	r2, #16777216
 1047 0080 DA61     		str	r2, [r3, #28]
 615:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1048              		.loc 1 615 0
 1049 0082 4FF00003 		mov	r3, #0
 1050 0086 7B61     		str	r3, [r7, #20]
 1051              	.L40:
 616:../Dave/Generated/src/CAN001/CAN001.c ****   }
 617:../Dave/Generated/src/CAN001/CAN001.c ****  
 618:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1052              		.loc 1 618 0
 1053 0088 7B69     		ldr	r3, [r7, #20]
 619:../Dave/Generated/src/CAN001/CAN001.c **** }
 1054              		.loc 1 619 0
 1055 008a 1846     		mov	r0, r3
 1056 008c 07F11C07 		add	r7, r7, #28
 1057 0090 BD46     		mov	sp, r7
 1058 0092 80BC     		pop	{r7}
 1059 0094 7047     		bx	lr
 1060              		.cfi_endproc
 1061              	.LFE125:
 1063 0096 00BF     		.section	.text.CAN001_ReadMsgObj,"ax",%progbits
 1064              		.align	2
 1065              		.global	CAN001_ReadMsgObj
 1066              		.thumb
 1067              		.thumb_func
 1069              	CAN001_ReadMsgObj:
 1070              	.LFB126:
 620:../Dave/Generated/src/CAN001/CAN001.c **** 
 621:../Dave/Generated/src/CAN001/CAN001.c **** /*
 622:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will read the message object data bytes 
 623:../Dave/Generated/src/CAN001/CAN001.c ****  *  into message pointer passed as input parameter
 624:../Dave/Generated/src/CAN001/CAN001.c ****  */
 625:../Dave/Generated/src/CAN001/CAN001.c **** 
 626:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ReadMsgObj
 627:../Dave/Generated/src/CAN001/CAN001.c **** (
 628:../Dave/Generated/src/CAN001/CAN001.c ****  const CAN001_HandleType* Handle,
 629:../Dave/Generated/src/CAN001/CAN001.c ****  CAN001_MessageHandleType* SwMsgObjptr,
 630:../Dave/Generated/src/CAN001/CAN001.c ****  uint8_t MsgObjnr
 631:../Dave/Generated/src/CAN001/CAN001.c **** )
 632:../Dave/Generated/src/CAN001/CAN001.c **** {
 1071              		.loc 1 632 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 32
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076 0000 80B4     		push	{r7}
 1077              	.LCFI26:
 1078              		.cfi_def_cfa_offset 4
 1079              		.cfi_offset 7, -4
 1080 0002 89B0     		sub	sp, sp, #36
 1081              	.LCFI27:
 1082              		.cfi_def_cfa_offset 40
 1083 0004 00AF     		add	r7, sp, #0
 1084              	.LCFI28:
 1085              		.cfi_def_cfa_register 7
 1086 0006 F860     		str	r0, [r7, #12]
 1087 0008 B960     		str	r1, [r7, #8]
 1088 000a 1346     		mov	r3, r2
 1089 000c FB71     		strb	r3, [r7, #7]
 633:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1090              		.loc 1 633 0
 1091 000e 4FF00503 		mov	r3, #5
 1092 0012 FB61     		str	r3, [r7, #28]
 634:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1093              		.loc 1 634 0
 1094 0014 4FF00003 		mov	r3, #0
 1095 0018 BB61     		str	r3, [r7, #24]
 635:../Dave/Generated/src/CAN001/CAN001.c ****   bool RxPnd = 0U;
 1096              		.loc 1 635 0
 1097 001a 4FF00003 		mov	r3, #0
 1098 001e FB75     		strb	r3, [r7, #23]
 636:../Dave/Generated/src/CAN001/CAN001.c ****   bool NewData = 0U;
 1099              		.loc 1 636 0
 1100 0020 4FF00003 		mov	r3, #0
 1101 0024 BB75     		strb	r3, [r7, #22]
 637:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1102              		.loc 1 637 0
 1103 0026 FB68     		ldr	r3, [r7, #12]
 1104 0028 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1105 002a FB79     		ldrb	r3, [r7, #7]
 1106 002c D318     		adds	r3, r2, r3
 1107 002e DBB2     		uxtb	r3, r3
 1108 0030 03F1FF33 		add	r3, r3, #-1
 1109 0034 7B75     		strb	r3, [r7, #21]
 638:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 639:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 640:../Dave/Generated/src/CAN001/CAN001.c ****                  GET_MO_OFFSET(MsgNo);
 1110              		.loc 1 640 0
 1111 0036 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1112 0038 03F11073 		add	r3, r3, #37748736
 1113 003c 03F52863 		add	r3, r3, #2688
 1114 0040 4FEA4313 		lsl	r3, r3, #5
 639:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1115              		.loc 1 639 0
 1116 0044 3B61     		str	r3, [r7, #16]
 641:../Dave/Generated/src/CAN001/CAN001.c ****   
 642:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 643:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 644:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_1>>>*/
 645:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1117              		.loc 1 645 0
 1118 0046 3B69     		ldr	r3, [r7, #16]
 1119 0048 DB69     		ldr	r3, [r3, #28]
 1120 004a 03F40063 		and	r3, r3, #2048
 1121 004e 4FEAD323 		lsr	r3, r3, #11
 1122 0052 002B     		cmp	r3, #0
 1123 0054 03D0     		beq	.L45
 646:../Dave/Generated/src/CAN001/CAN001.c ****                                    CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 647:../Dave/Generated/src/CAN001/CAN001.c ****   {
 648:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1124              		.loc 1 648 0
 1125 0056 4FF00103 		mov	r3, #1
 1126 005a FB61     		str	r3, [r7, #28]
 1127 005c CAE0     		b	.L46
 1128              	.L45:
 649:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 650:../Dave/Generated/src/CAN001/CAN001.c ****   }
 651:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if reception is ongoing on message object */
 652:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_2>>>*/
 653:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_RXUPD_Msk, \
 1129              		.loc 1 653 0
 1130 005e 3B69     		ldr	r3, [r7, #16]
 1131 0060 DB69     		ldr	r3, [r3, #28]
 1132 0062 03F00403 		and	r3, r3, #4
 1133 0066 4FEA9303 		lsr	r3, r3, #2
 1134 006a 012B     		cmp	r3, #1
 1135 006c 03D1     		bne	.L47
 654:../Dave/Generated/src/CAN001/CAN001.c ****                                          CAN_MO_MOSTAT_RXUPD_Pos) == 1U)
 655:../Dave/Generated/src/CAN001/CAN001.c ****   {
 656:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1136              		.loc 1 656 0
 1137 006e 4FF00403 		mov	r3, #4
 1138 0072 FB61     		str	r3, [r7, #28]
 1139 0074 BEE0     		b	.L46
 1140              	.L47:
 657:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 658:../Dave/Generated/src/CAN001/CAN001.c ****   }
 659:../Dave/Generated/src/CAN001/CAN001.c ****   else
 660:../Dave/Generated/src/CAN001/CAN001.c ****   {
 661:../Dave/Generated/src/CAN001/CAN001.c ****     /* read message parameters */
 662:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_6_3>>>*/
 663:../Dave/Generated/src/CAN001/CAN001.c ****     do
 664:../Dave/Generated/src/CAN001/CAN001.c ****     {
 665:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1141              		.loc 1 665 0
 1142 0076 3B69     		ldr	r3, [r7, #16]
 1143 0078 4FF00802 		mov	r2, #8
 1144 007c DA61     		str	r2, [r3, #28]
 666:../Dave/Generated/src/CAN001/CAN001.c ****       if((RD_REG(CAN_MOxRegs->MOAR, CAN_MO_MOAR_IDE_Msk , \
 1145              		.loc 1 666 0
 1146 007e 3B69     		ldr	r3, [r7, #16]
 1147 0080 9B69     		ldr	r3, [r3, #24]
 1148 0082 03F00053 		and	r3, r3, #536870912
 1149 0086 4FEA5373 		lsr	r3, r3, #29
 1150 008a 002B     		cmp	r3, #0
 1151 008c 2ED1     		bne	.L48
 667:../Dave/Generated/src/CAN001/CAN001.c ****                          CAN_MO_MOAR_IDE_Pos)) == 0U)
 668:../Dave/Generated/src/CAN001/CAN001.c ****       {
 669:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)STANDARDTYPE;
 1152              		.loc 1 669 0
 1153 008e BB68     		ldr	r3, [r7, #8]
 1154 0090 4FF00002 		mov	r2, #0
 1155 0094 1A72     		strb	r2, [r3, #8]
 670:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = (CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1156              		.loc 1 670 0
 1157 0096 3B69     		ldr	r3, [r7, #16]
 1158 0098 9A69     		ldr	r2, [r3, #24]
 1159 009a 4FF00003 		mov	r3, #0
 1160 009e C1F6FC73 		movt	r3, 8188
 1161 00a2 1340     		ands	r3, r3, r2
 1162 00a4 4FEA9342 		lsr	r2, r3, #18
 1163 00a8 BB68     		ldr	r3, [r7, #8]
 1164 00aa 1A60     		str	r2, [r3, #0]
 671:../Dave/Generated/src/CAN001/CAN001.c ****                                                     CAN_MO_MOAR_STDID_Pos;
 672:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1165              		.loc 1 672 0
 1166 00ac 3B69     		ldr	r3, [r7, #16]
 1167 00ae DB68     		ldr	r3, [r3, #12]
 1168 00b0 03F00053 		and	r3, r3, #536870912
 1169 00b4 4FEA5373 		lsr	r3, r3, #29
 1170 00b8 DAB2     		uxtb	r2, r3
 1171 00ba BB68     		ldr	r3, [r7, #8]
 1172 00bc 5A72     		strb	r2, [r3, #9]
 673:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOAMR_MIDE_Pos);
 674:../Dave/Generated/src/CAN001/CAN001.c ****         if(SwMsgObjptr->IDEMask == 1U)
 1173              		.loc 1 674 0
 1174 00be BB68     		ldr	r3, [r7, #8]
 1175 00c0 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1176 00c2 012B     		cmp	r3, #1
 1177 00c4 0BD1     		bne	.L49
 675:../Dave/Generated/src/CAN001/CAN001.c ****         {
 676:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->IDMask = (CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1178              		.loc 1 676 0
 1179 00c6 3B69     		ldr	r3, [r7, #16]
 1180 00c8 DA68     		ldr	r2, [r3, #12]
 1181 00ca 4FF00003 		mov	r3, #0
 1182 00ce C1F6FC73 		movt	r3, 8188
 1183 00d2 1340     		ands	r3, r3, r2
 1184 00d4 4FEA9342 		lsr	r2, r3, #18
 1185 00d8 BB68     		ldr	r3, [r7, #8]
 1186 00da 5A60     		str	r2, [r3, #4]
 1187 00dc 1FE0     		b	.L50
 1188              	.L49:
 677:../Dave/Generated/src/CAN001/CAN001.c ****      	                                             CAN_MO_MOAR_STDID_Pos;
 678:../Dave/Generated/src/CAN001/CAN001.c ****         }
 679:../Dave/Generated/src/CAN001/CAN001.c ****         else
 680:../Dave/Generated/src/CAN001/CAN001.c ****         {
 681:../Dave/Generated/src/CAN001/CAN001.c ****      	   SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1189              		.loc 1 681 0
 1190 00de 3B69     		ldr	r3, [r7, #16]
 1191 00e0 DB68     		ldr	r3, [r3, #12]
 1192 00e2 23F06042 		bic	r2, r3, #-536870912
 1193 00e6 BB68     		ldr	r3, [r7, #8]
 1194 00e8 5A60     		str	r2, [r3, #4]
 1195 00ea 18E0     		b	.L50
 1196              	.L48:
 682:../Dave/Generated/src/CAN001/CAN001.c ****         }
 683:../Dave/Generated/src/CAN001/CAN001.c ****       }
 684:../Dave/Generated/src/CAN001/CAN001.c ****       else
 685:../Dave/Generated/src/CAN001/CAN001.c ****       {
 686:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)EXTENDEDTYPE;
 1197              		.loc 1 686 0
 1198 00ec BB68     		ldr	r3, [r7, #8]
 1199 00ee 4FF00102 		mov	r2, #1
 1200 00f2 1A72     		strb	r2, [r3, #8]
 687:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_ID_Msk;
 1201              		.loc 1 687 0
 1202 00f4 3B69     		ldr	r3, [r7, #16]
 1203 00f6 9B69     		ldr	r3, [r3, #24]
 1204 00f8 23F06042 		bic	r2, r3, #-536870912
 1205 00fc BB68     		ldr	r3, [r7, #8]
 1206 00fe 1A60     		str	r2, [r3, #0]
 688:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1207              		.loc 1 688 0
 1208 0100 3B69     		ldr	r3, [r7, #16]
 1209 0102 DB68     		ldr	r3, [r3, #12]
 1210 0104 23F06042 		bic	r2, r3, #-536870912
 1211 0108 BB68     		ldr	r3, [r7, #8]
 1212 010a 5A60     		str	r2, [r3, #4]
 689:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1213              		.loc 1 689 0
 1214 010c 3B69     		ldr	r3, [r7, #16]
 1215 010e DB68     		ldr	r3, [r3, #12]
 1216 0110 03F00053 		and	r3, r3, #536870912
 1217 0114 4FEA5373 		lsr	r3, r3, #29
 1218 0118 DAB2     		uxtb	r2, r3
 1219 011a BB68     		ldr	r3, [r7, #8]
 1220 011c 5A72     		strb	r2, [r3, #9]
 1221              	.L50:
 690:../Dave/Generated/src/CAN001/CAN001.c ****                                     CAN_MO_MOAMR_MIDE_Pos);
 691:../Dave/Generated/src/CAN001/CAN001.c ****       }
 692:../Dave/Generated/src/CAN001/CAN001.c ****       SwMsgObjptr->DataLength = (uint8_t)RD_REG(CAN_MOxRegs->MOFCR, \
 1222              		.loc 1 692 0
 1223 011e 3B69     		ldr	r3, [r7, #16]
 1224 0120 1B68     		ldr	r3, [r3, #0]
 1225 0122 03F07063 		and	r3, r3, #251658240
 1226 0126 4FEA1363 		lsr	r3, r3, #24
 1227 012a DAB2     		uxtb	r2, r3
 1228 012c BB68     		ldr	r3, [r7, #8]
 1229 012e 9A72     		strb	r2, [r3, #10]
 693:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOFCR_DLC_Msk, CAN_MO_MOFCR_DLC_Pos);
 694:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1230              		.loc 1 694 0
 1231 0130 4FF00003 		mov	r3, #0
 1232 0134 BB61     		str	r3, [r7, #24]
 1233 0136 3BE0     		b	.L51
 1234              	.L54:
 695:../Dave/Generated/src/CAN001/CAN001.c ****       {
 696:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 1235              		.loc 1 696 0
 1236 0138 BB69     		ldr	r3, [r7, #24]
 1237 013a 032B     		cmp	r3, #3
 1238 013c 16D8     		bhi	.L52
 697:../Dave/Generated/src/CAN001/CAN001.c ****         {
 698:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAL, \
 1239              		.loc 1 698 0
 1240 013e 3B69     		ldr	r3, [r7, #16]
 1241 0140 1A69     		ldr	r2, [r3, #16]
 1242 0142 BB69     		ldr	r3, [r7, #24]
 1243 0144 4FEAC303 		lsl	r3, r3, #3
 1244 0148 4FF0FF01 		mov	r1, #255
 1245 014c 01FA03F3 		lsl	r3, r1, r3
 1246 0150 1A40     		ands	r2, r2, r3
 1247 0152 BB69     		ldr	r3, [r7, #24]
 1248 0154 4FEAC303 		lsl	r3, r3, #3
 1249 0158 22FA03F3 		lsr	r3, r2, r3
 1250 015c DAB2     		uxtb	r2, r3
 1251 015e B968     		ldr	r1, [r7, #8]
 1252 0160 BB69     		ldr	r3, [r7, #24]
 1253 0162 CB18     		adds	r3, r1, r3
 1254 0164 03F10803 		add	r3, r3, #8
 1255 0168 DA70     		strb	r2, [r3, #3]
 1256 016a 1DE0     		b	.L53
 1257              	.L52:
 699:../Dave/Generated/src/CAN001/CAN001.c ****                                   (CAN_MO_MODATAL_DB0_Msk << (Count*8U)), \
 700:../Dave/Generated/src/CAN001/CAN001.c ****                                                             (Count*8U));
 701:../Dave/Generated/src/CAN001/CAN001.c ****         }
 702:../Dave/Generated/src/CAN001/CAN001.c ****         else
 703:../Dave/Generated/src/CAN001/CAN001.c ****         {
 704:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAH, \
 1258              		.loc 1 704 0
 1259 016c 3B69     		ldr	r3, [r7, #16]
 1260 016e 5A69     		ldr	r2, [r3, #20]
 1261 0170 BB69     		ldr	r3, [r7, #24]
 1262 0172 03F10053 		add	r3, r3, #536870912
 1263 0176 A3F10403 		sub	r3, r3, #4
 1264 017a 4FEAC303 		lsl	r3, r3, #3
 1265 017e 4FF0FF01 		mov	r1, #255
 1266 0182 01FA03F3 		lsl	r3, r1, r3
 1267 0186 1A40     		ands	r2, r2, r3
 1268 0188 BB69     		ldr	r3, [r7, #24]
 1269 018a 03F10053 		add	r3, r3, #536870912
 1270 018e A3F10403 		sub	r3, r3, #4
 1271 0192 4FEAC303 		lsl	r3, r3, #3
 1272 0196 22FA03F3 		lsr	r3, r2, r3
 1273 019a DAB2     		uxtb	r2, r3
 1274 019c B968     		ldr	r1, [r7, #8]
 1275 019e BB69     		ldr	r3, [r7, #24]
 1276 01a0 CB18     		adds	r3, r1, r3
 1277 01a2 03F10803 		add	r3, r3, #8
 1278 01a6 DA70     		strb	r2, [r3, #3]
 1279              	.L53:
 694:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1280              		.loc 1 694 0
 1281 01a8 BB69     		ldr	r3, [r7, #24]
 1282 01aa 03F10103 		add	r3, r3, #1
 1283 01ae BB61     		str	r3, [r7, #24]
 1284              	.L51:
 694:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1285              		.loc 1 694 0 is_stmt 0 discriminator 1
 1286 01b0 BB68     		ldr	r3, [r7, #8]
 1287 01b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1288 01b4 1A46     		mov	r2, r3
 1289 01b6 BB69     		ldr	r3, [r7, #24]
 1290 01b8 9A42     		cmp	r2, r3
 1291 01ba BDD8     		bhi	.L54
 705:../Dave/Generated/src/CAN001/CAN001.c ****                                    (CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)) ,\
 706:../Dave/Generated/src/CAN001/CAN001.c ****                                                             ((Count-4U)*8U));
 707:../Dave/Generated/src/CAN001/CAN001.c ****         }
 708:../Dave/Generated/src/CAN001/CAN001.c ****       }
 709:../Dave/Generated/src/CAN001/CAN001.c ****       RxPnd = (bool)CHECK_RXPND_BIT();
 1292              		.loc 1 709 0 is_stmt 1
 1293 01bc 3B69     		ldr	r3, [r7, #16]
 1294 01be DB69     		ldr	r3, [r3, #28]
 1295 01c0 03F00403 		and	r3, r3, #4
 1296 01c4 4FEA9303 		lsr	r3, r3, #2
 1297 01c8 FB75     		strb	r3, [r7, #23]
 710:../Dave/Generated/src/CAN001/CAN001.c ****       NewData = (bool)CHECK_NEWDATA_BIT();
 1298              		.loc 1 710 0
 1299 01ca 3B69     		ldr	r3, [r7, #16]
 1300 01cc DB69     		ldr	r3, [r3, #28]
 1301 01ce 03F00803 		and	r3, r3, #8
 1302 01d2 4FEAD303 		lsr	r3, r3, #3
 1303 01d6 BB75     		strb	r3, [r7, #22]
 711:../Dave/Generated/src/CAN001/CAN001.c ****     } while((RxPnd != 0U) && (NewData != 0U));
 1304              		.loc 1 711 0
 1305 01d8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1306 01da 002B     		cmp	r3, #0
 1307 01dc 03D0     		beq	.L55
 1308              		.loc 1 711 0 is_stmt 0 discriminator 1
 1309 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1310 01e0 002B     		cmp	r3, #0
 1311 01e2 7FF448AF 		bne	.L47
 1312              	.L55:
 712:../Dave/Generated/src/CAN001/CAN001.c ****      SwMsgObjptr->MsgObjType = RECMSGOBJ;
 1313              		.loc 1 712 0 is_stmt 1
 1314 01e6 BB68     		ldr	r3, [r7, #8]
 1315 01e8 4FF00002 		mov	r2, #0
 1316 01ec 1A75     		strb	r2, [r3, #20]
 713:../Dave/Generated/src/CAN001/CAN001.c ****      Error = (uint32_t)DAVEApp_SUCCESS;
 1317              		.loc 1 713 0
 1318 01ee 4FF00003 		mov	r3, #0
 1319 01f2 FB61     		str	r3, [r7, #28]
 1320              	.L46:
 714:../Dave/Generated/src/CAN001/CAN001.c ****   }
 715:../Dave/Generated/src/CAN001/CAN001.c ****  
 716:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1321              		.loc 1 716 0
 1322 01f4 FB69     		ldr	r3, [r7, #28]
 717:../Dave/Generated/src/CAN001/CAN001.c **** }
 1323              		.loc 1 717 0
 1324 01f6 1846     		mov	r0, r3
 1325 01f8 07F12407 		add	r7, r7, #36
 1326 01fc BD46     		mov	sp, r7
 1327 01fe 80BC     		pop	{r7}
 1328 0200 7047     		bx	lr
 1329              		.cfi_endproc
 1330              	.LFE126:
 1332 0202 00BF     		.section	.text.CAN001_UpdateMODataRegisters,"ax",%progbits
 1333              		.align	2
 1334              		.global	CAN001_UpdateMODataRegisters
 1335              		.thumb
 1336              		.thumb_func
 1338              	CAN001_UpdateMODataRegisters:
 1339              	.LFB127:
 718:../Dave/Generated/src/CAN001/CAN001.c **** 
 719:../Dave/Generated/src/CAN001/CAN001.c **** 
 720:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function updates data registers of given message 
 721:../Dave/Generated/src/CAN001/CAN001.c ****  *  object
 722:../Dave/Generated/src/CAN001/CAN001.c ****  */
 723:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_UpdateMODataRegisters
 724:../Dave/Generated/src/CAN001/CAN001.c **** (
 725:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 726:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr,
 727:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t DataLength, 
 728:../Dave/Generated/src/CAN001/CAN001.c ****   const uint8_t* DataPtr
 729:../Dave/Generated/src/CAN001/CAN001.c **** )
 730:../Dave/Generated/src/CAN001/CAN001.c **** {
 1340              		.loc 1 730 0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 32
 1343              		@ frame_needed = 1, uses_anonymous_args = 0
 1344              		@ link register save eliminated.
 1345 0000 80B4     		push	{r7}
 1346              	.LCFI29:
 1347              		.cfi_def_cfa_offset 4
 1348              		.cfi_offset 7, -4
 1349 0002 89B0     		sub	sp, sp, #36
 1350              	.LCFI30:
 1351              		.cfi_def_cfa_offset 40
 1352 0004 00AF     		add	r7, sp, #0
 1353              	.LCFI31:
 1354              		.cfi_def_cfa_register 7
 1355 0006 F860     		str	r0, [r7, #12]
 1356 0008 7B60     		str	r3, [r7, #4]
 1357 000a 0B46     		mov	r3, r1
 1358 000c FB72     		strb	r3, [r7, #11]
 1359 000e 1346     		mov	r3, r2
 1360 0010 BB72     		strb	r3, [r7, #10]
 731:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1361              		.loc 1 731 0
 1362 0012 4FF00503 		mov	r3, #5
 1363 0016 FB61     		str	r3, [r7, #28]
 732:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1364              		.loc 1 732 0
 1365 0018 4FF00003 		mov	r3, #0
 1366 001c BB61     		str	r3, [r7, #24]
 733:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1367              		.loc 1 733 0
 1368 001e FB68     		ldr	r3, [r7, #12]
 1369 0020 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1370 0022 FB7A     		ldrb	r3, [r7, #11]
 1371 0024 D318     		adds	r3, r2, r3
 1372 0026 DBB2     		uxtb	r3, r3
 1373 0028 03F1FF33 		add	r3, r3, #-1
 1374 002c FB75     		strb	r3, [r7, #23]
 734:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 735:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 736:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1375              		.loc 1 736 0
 1376 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1377 0030 03F11073 		add	r3, r3, #37748736
 1378 0034 03F52863 		add	r3, r3, #2688
 1379 0038 4FEA4313 		lsl	r3, r3, #5
 735:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1380              		.loc 1 735 0
 1381 003c 3B61     		str	r3, [r7, #16]
 737:../Dave/Generated/src/CAN001/CAN001.c ****   
 738:../Dave/Generated/src/CAN001/CAN001.c ****   
 739:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 740:../Dave/Generated/src/CAN001/CAN001.c ****   if (DataLength > 8U)
 1382              		.loc 1 740 0
 1383 003e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1384 0040 082B     		cmp	r3, #8
 1385 0042 03D9     		bls	.L58
 741:../Dave/Generated/src/CAN001/CAN001.c ****   {
 742:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_INVALID_INPUT;
 1386              		.loc 1 742 0
 1387 0044 4FF00603 		mov	r3, #6
 1388 0048 FB61     		str	r3, [r7, #28]
 1389 004a 82E0     		b	.L59
 1390              	.L58:
 743:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 744:../Dave/Generated/src/CAN001/CAN001.c ****   }
 745:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 746:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1391              		.loc 1 746 0
 1392 004c 3B69     		ldr	r3, [r7, #16]
 1393 004e DB69     		ldr	r3, [r3, #28]
 1394 0050 03F40063 		and	r3, r3, #2048
 1395 0054 4FEAD323 		lsr	r3, r3, #11
 1396 0058 012B     		cmp	r3, #1
 1397 005a 03D0     		beq	.L60
 747:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 748:../Dave/Generated/src/CAN001/CAN001.c ****   {
 749:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1398              		.loc 1 749 0
 1399 005c 4FF00103 		mov	r3, #1
 1400 0060 FB61     		str	r3, [r7, #28]
 1401 0062 76E0     		b	.L59
 1402              	.L60:
 750:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, sizeof(Error), &Error); 
 751:../Dave/Generated/src/CAN001/CAN001.c ****   }
 752:../Dave/Generated/src/CAN001/CAN001.c ****   else
 753:../Dave/Generated/src/CAN001/CAN001.c ****   {
 754:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 1403              		.loc 1 754 0
 1404 0064 3B69     		ldr	r3, [r7, #16]
 1405 0066 4FF02002 		mov	r2, #32
 1406 006a DA61     		str	r2, [r3, #28]
 755:../Dave/Generated/src/CAN001/CAN001.c ****     /* Configure data length */
 756:../Dave/Generated/src/CAN001/CAN001.c ****     WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 1407              		.loc 1 756 0
 1408 006c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1409 006e 4FEA0363 		lsl	r3, r3, #24
 1410 0072 03F07062 		and	r2, r3, #251658240
 1411 0076 3B69     		ldr	r3, [r7, #16]
 1412 0078 1B68     		ldr	r3, [r3, #0]
 1413 007a 23F07063 		bic	r3, r3, #251658240
 1414 007e 1A43     		orrs	r2, r2, r3
 1415 0080 3B69     		ldr	r3, [r7, #16]
 1416 0082 1A60     		str	r2, [r3, #0]
 757:../Dave/Generated/src/CAN001/CAN001.c ****                               CAN_MO_MOFCR_DLC_Pos, (uint32_t)DataLength);
 758:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1417              		.loc 1 758 0
 1418 0084 4FF00003 		mov	r3, #0
 1419 0088 BB61     		str	r3, [r7, #24]
 1420 008a 55E0     		b	.L61
 1421              	.L64:
 759:../Dave/Generated/src/CAN001/CAN001.c ****     {
 760:../Dave/Generated/src/CAN001/CAN001.c ****       if(Count < 4U)
 1422              		.loc 1 760 0
 1423 008c BB69     		ldr	r3, [r7, #24]
 1424 008e 032B     		cmp	r3, #3
 1425 0090 21D8     		bhi	.L62
 761:../Dave/Generated/src/CAN001/CAN001.c ****       {
 762:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << (Count*8U)) , \
 1426              		.loc 1 762 0
 1427 0092 7A68     		ldr	r2, [r7, #4]
 1428 0094 BB69     		ldr	r3, [r7, #24]
 1429 0096 D318     		adds	r3, r2, r3
 1430 0098 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1431 009a 1A46     		mov	r2, r3
 1432 009c BB69     		ldr	r3, [r7, #24]
 1433 009e 4FEAC303 		lsl	r3, r3, #3
 1434 00a2 02FA03F2 		lsl	r2, r2, r3
 1435 00a6 BB69     		ldr	r3, [r7, #24]
 1436 00a8 4FEAC303 		lsl	r3, r3, #3
 1437 00ac 4FF0FF01 		mov	r1, #255
 1438 00b0 01FA03F3 		lsl	r3, r1, r3
 1439 00b4 1A40     		ands	r2, r2, r3
 1440 00b6 3B69     		ldr	r3, [r7, #16]
 1441 00b8 1969     		ldr	r1, [r3, #16]
 1442 00ba BB69     		ldr	r3, [r7, #24]
 1443 00bc 4FEAC303 		lsl	r3, r3, #3
 1444 00c0 4FF0FF00 		mov	r0, #255
 1445 00c4 00FA03F3 		lsl	r3, r0, r3
 1446 00c8 6FEA0303 		mvn	r3, r3
 1447 00cc 0B40     		ands	r3, r3, r1
 1448 00ce 1A43     		orrs	r2, r2, r3
 1449 00d0 3B69     		ldr	r3, [r7, #16]
 1450 00d2 1A61     		str	r2, [r3, #16]
 1451 00d4 2CE0     		b	.L63
 1452              	.L62:
 763:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U), (uint32_t)(*(DataPtr + Count)));
 764:../Dave/Generated/src/CAN001/CAN001.c ****       }
 765:../Dave/Generated/src/CAN001/CAN001.c ****       else
 766:../Dave/Generated/src/CAN001/CAN001.c ****       {
 767:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 1453              		.loc 1 767 0
 1454 00d6 7A68     		ldr	r2, [r7, #4]
 1455 00d8 BB69     		ldr	r3, [r7, #24]
 1456 00da D318     		adds	r3, r2, r3
 1457 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1458 00de 1A46     		mov	r2, r3
 1459 00e0 BB69     		ldr	r3, [r7, #24]
 1460 00e2 03F10053 		add	r3, r3, #536870912
 1461 00e6 A3F10403 		sub	r3, r3, #4
 1462 00ea 4FEAC303 		lsl	r3, r3, #3
 1463 00ee 02FA03F2 		lsl	r2, r2, r3
 1464 00f2 BB69     		ldr	r3, [r7, #24]
 1465 00f4 03F10053 		add	r3, r3, #536870912
 1466 00f8 A3F10403 		sub	r3, r3, #4
 1467 00fc 4FEAC303 		lsl	r3, r3, #3
 1468 0100 4FF0FF01 		mov	r1, #255
 1469 0104 01FA03F3 		lsl	r3, r1, r3
 1470 0108 1A40     		ands	r2, r2, r3
 1471 010a 3B69     		ldr	r3, [r7, #16]
 1472 010c 5969     		ldr	r1, [r3, #20]
 1473 010e BB69     		ldr	r3, [r7, #24]
 1474 0110 03F10053 		add	r3, r3, #536870912
 1475 0114 A3F10403 		sub	r3, r3, #4
 1476 0118 4FEAC303 		lsl	r3, r3, #3
 1477 011c 4FF0FF00 		mov	r0, #255
 1478 0120 00FA03F3 		lsl	r3, r0, r3
 1479 0124 6FEA0303 		mvn	r3, r3
 1480 0128 0B40     		ands	r3, r3, r1
 1481 012a 1A43     		orrs	r2, r2, r3
 1482 012c 3B69     		ldr	r3, [r7, #16]
 1483 012e 5A61     		str	r2, [r3, #20]
 1484              	.L63:
 758:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1485              		.loc 1 758 0
 1486 0130 BB69     		ldr	r3, [r7, #24]
 1487 0132 03F10103 		add	r3, r3, #1
 1488 0136 BB61     		str	r3, [r7, #24]
 1489              	.L61:
 758:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1490              		.loc 1 758 0 is_stmt 0 discriminator 1
 1491 0138 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1492 013a BB69     		ldr	r3, [r7, #24]
 1493 013c 9A42     		cmp	r2, r3
 1494 013e A5D8     		bhi	.L64
 768:../Dave/Generated/src/CAN001/CAN001.c ****                                    ((Count-4U)*8U), (uint32_t)(*(DataPtr + Count)));
 769:../Dave/Generated/src/CAN001/CAN001.c ****       }
 770:../Dave/Generated/src/CAN001/CAN001.c ****     }
 771:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1, NEWDATA and RXEN */
 772:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 1495              		.loc 1 772 0 is_stmt 1
 1496 0140 3A69     		ldr	r2, [r7, #16]
 1497 0142 4FF04003 		mov	r3, #64
 1498 0146 C0F2A863 		movt	r3, 1704
 1499 014a D361     		str	r3, [r2, #28]
 773:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 774:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 775:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk | \
 776:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETNEWDAT_Msk | \
 777:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 778:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_RESRTSEL_Msk);
 779:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1500              		.loc 1 779 0
 1501 014c 4FF00003 		mov	r3, #0
 1502 0150 FB61     		str	r3, [r7, #28]
 1503              	.L59:
 780:../Dave/Generated/src/CAN001/CAN001.c ****   }
 781:../Dave/Generated/src/CAN001/CAN001.c ****  
 782:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1504              		.loc 1 782 0
 1505 0152 FB69     		ldr	r3, [r7, #28]
 783:../Dave/Generated/src/CAN001/CAN001.c **** }
 1506              		.loc 1 783 0
 1507 0154 1846     		mov	r0, r3
 1508 0156 07F12407 		add	r7, r7, #36
 1509 015a BD46     		mov	sp, r7
 1510 015c 80BC     		pop	{r7}
 1511 015e 7047     		bx	lr
 1512              		.cfi_endproc
 1513              	.LFE127:
 1515              		.section	.text.CAN001_GetMOFlagStatus,"ax",%progbits
 1516              		.align	2
 1517              		.global	CAN001_GetMOFlagStatus
 1518              		.thumb
 1519              		.thumb_func
 1521              	CAN001_GetMOFlagStatus:
 1522              	.LFB128:
 784:../Dave/Generated/src/CAN001/CAN001.c **** 
 785:../Dave/Generated/src/CAN001/CAN001.c **** 
 786:../Dave/Generated/src/CAN001/CAN001.c ****     
 787:../Dave/Generated/src/CAN001/CAN001.c **** /*
 788:../Dave/Generated/src/CAN001/CAN001.c ****  *  This function is used to return the status of the message object specified. 
 789:../Dave/Generated/src/CAN001/CAN001.c ****  *  The flag value to be returned should be passed as input parameter of 
 790:../Dave/Generated/src/CAN001/CAN001.c ****  *   type MsgStatus 
 791:../Dave/Generated/src/CAN001/CAN001.c ****  */
 792:../Dave/Generated/src/CAN001/CAN001.c **** 
 793:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOFlagStatus
 794:../Dave/Generated/src/CAN001/CAN001.c **** (
 795:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 796:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 797:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 798:../Dave/Generated/src/CAN001/CAN001.c ****  )
 799:../Dave/Generated/src/CAN001/CAN001.c **** {
 1523              		.loc 1 799 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 24
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 1528 0000 80B4     		push	{r7}
 1529              	.LCFI32:
 1530              		.cfi_def_cfa_offset 4
 1531              		.cfi_offset 7, -4
 1532 0002 87B0     		sub	sp, sp, #28
 1533              	.LCFI33:
 1534              		.cfi_def_cfa_offset 32
 1535 0004 00AF     		add	r7, sp, #0
 1536              	.LCFI34:
 1537              		.cfi_def_cfa_register 7
 1538 0006 7860     		str	r0, [r7, #4]
 1539 0008 1346     		mov	r3, r2
 1540 000a 0A46     		mov	r2, r1
 1541 000c FA70     		strb	r2, [r7, #3]
 1542 000e BB70     		strb	r3, [r7, #2]
 800:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1543              		.loc 1 800 0
 1544 0010 4FF00503 		mov	r3, #5
 1545 0014 7B61     		str	r3, [r7, #20]
 801:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1546              		.loc 1 801 0
 1547 0016 7B68     		ldr	r3, [r7, #4]
 1548 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1549 001a FB78     		ldrb	r3, [r7, #3]
 1550 001c D318     		adds	r3, r2, r3
 1551 001e DBB2     		uxtb	r3, r3
 1552 0020 03F1FF33 		add	r3, r3, #-1
 1553 0024 FB74     		strb	r3, [r7, #19]
 802:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 803:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 804:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1554              		.loc 1 804 0
 1555 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1556 0028 03F11073 		add	r3, r3, #37748736
 1557 002c 03F52863 		add	r3, r3, #2688
 1558 0030 4FEA4313 		lsl	r3, r3, #5
 803:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1559              		.loc 1 803 0
 1560 0034 FB60     		str	r3, [r7, #12]
 805:../Dave/Generated/src/CAN001/CAN001.c ****    
 806:../Dave/Generated/src/CAN001/CAN001.c ****   do
 807:../Dave/Generated/src/CAN001/CAN001.c ****   {
 808:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 809:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((NewMsgStatus != RECEIVE_PENDING) && (NewMsgStatus != TRANSMIT_PENDING) \
 810:../Dave/Generated/src/CAN001/CAN001.c ****       && (NewMsgStatus != NEW_DATA) && (NewMsgStatus != MESSAGE_LOST));
 811:../Dave/Generated/src/CAN001/CAN001.c **** 
 812:../Dave/Generated/src/CAN001/CAN001.c ****     /* Check message object status */
 813:../Dave/Generated/src/CAN001/CAN001.c ****     if((CAN_MOxRegs->MOSTAT & (uint32_t)NewMsgStatus) != 0U)
 1561              		.loc 1 813 0
 1562 0036 FB68     		ldr	r3, [r7, #12]
 1563 0038 DA69     		ldr	r2, [r3, #28]
 1564 003a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1565 003c 1340     		ands	r3, r3, r2
 1566 003e 002B     		cmp	r3, #0
 1567 0040 03D0     		beq	.L67
 814:../Dave/Generated/src/CAN001/CAN001.c ****     {
 815:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_SET;
 1568              		.loc 1 815 0
 1569 0042 4FF00103 		mov	r3, #1
 1570 0046 7B61     		str	r3, [r7, #20]
 1571 0048 02E0     		b	.L68
 1572              	.L67:
 816:../Dave/Generated/src/CAN001/CAN001.c ****     }
 817:../Dave/Generated/src/CAN001/CAN001.c ****     else
 818:../Dave/Generated/src/CAN001/CAN001.c ****     {
 819:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_RESET;
 1573              		.loc 1 819 0
 1574 004a 4FF00003 		mov	r3, #0
 1575 004e 7B61     		str	r3, [r7, #20]
 1576              	.L68:
 820:../Dave/Generated/src/CAN001/CAN001.c ****     }
 821:../Dave/Generated/src/CAN001/CAN001.c ****   }while(0);
 822:../Dave/Generated/src/CAN001/CAN001.c **** 
 823:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1577              		.loc 1 823 0
 1578 0050 7B69     		ldr	r3, [r7, #20]
 824:../Dave/Generated/src/CAN001/CAN001.c **** }
 1579              		.loc 1 824 0
 1580 0052 1846     		mov	r0, r3
 1581 0054 07F11C07 		add	r7, r7, #28
 1582 0058 BD46     		mov	sp, r7
 1583 005a 80BC     		pop	{r7}
 1584 005c 7047     		bx	lr
 1585              		.cfi_endproc
 1586              	.LFE128:
 1588 005e 00BF     		.section	.text.CAN001_GetNodeFlagStatus,"ax",%progbits
 1589              		.align	2
 1590              		.global	CAN001_GetNodeFlagStatus
 1591              		.thumb
 1592              		.thumb_func
 1594              	CAN001_GetNodeFlagStatus:
 1595              	.LFB129:
 825:../Dave/Generated/src/CAN001/CAN001.c **** 
 826:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to return the status of the node specified.
 827:../Dave/Generated/src/CAN001/CAN001.c ****  *   The flag value to be returned should be passed as input parameter 
 828:../Dave/Generated/src/CAN001/CAN001.c ****  *   of type MsgStatusType.
 829:../Dave/Generated/src/CAN001/CAN001.c ****  */
 830:../Dave/Generated/src/CAN001/CAN001.c **** 
 831:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetNodeFlagStatus
 832:../Dave/Generated/src/CAN001/CAN001.c **** (
 833:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 834:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 835:../Dave/Generated/src/CAN001/CAN001.c **** )
 836:../Dave/Generated/src/CAN001/CAN001.c **** {
 1596              		.loc 1 836 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 16
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600              		@ link register save eliminated.
 1601 0000 80B4     		push	{r7}
 1602              	.LCFI35:
 1603              		.cfi_def_cfa_offset 4
 1604              		.cfi_offset 7, -4
 1605 0002 85B0     		sub	sp, sp, #20
 1606              	.LCFI36:
 1607              		.cfi_def_cfa_offset 24
 1608 0004 00AF     		add	r7, sp, #0
 1609              	.LCFI37:
 1610              		.cfi_def_cfa_register 7
 1611 0006 7860     		str	r0, [r7, #4]
 1612 0008 0B46     		mov	r3, r1
 1613 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 837:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1614              		.loc 1 837 0
 1615 000c 4FF00503 		mov	r3, #5
 1616 0010 FB60     		str	r3, [r7, #12]
 838:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 839:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1617              		.loc 1 839 0
 1618 0012 7B68     		ldr	r3, [r7, #4]
 1619 0014 9B68     		ldr	r3, [r3, #8]
 1620 0016 BB60     		str	r3, [r7, #8]
 840:../Dave/Generated/src/CAN001/CAN001.c ****  
 841:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((NewNodeStatus != CAN001_ALERT_STATUS) && (NewNodeStatus != CAN001_ERROR_WARN_STATUS) \
 842:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_BUS_OFF_STATUS) && (NewNodeStatus  != CAN001_LIST_LENGTH_ERROR)\
 843:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_LIST_OBJECT_ERROR));
 844:../Dave/Generated/src/CAN001/CAN001.c **** 
 845:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check Node status */
 846:../Dave/Generated/src/CAN001/CAN001.c ****   if ((CAN_NodexRegs->NSR & (uint32_t)NewNodeStatus) != 0U)
 1621              		.loc 1 846 0
 1622 0018 BB68     		ldr	r3, [r7, #8]
 1623 001a 5A68     		ldr	r2, [r3, #4]
 1624 001c 7B88     		ldrh	r3, [r7, #2]
 1625 001e 1340     		ands	r3, r3, r2
 1626 0020 002B     		cmp	r3, #0
 1627 0022 03D0     		beq	.L71
 847:../Dave/Generated/src/CAN001/CAN001.c ****   {
 848:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_SET;
 1628              		.loc 1 848 0
 1629 0024 4FF00103 		mov	r3, #1
 1630 0028 FB60     		str	r3, [r7, #12]
 1631 002a 02E0     		b	.L72
 1632              	.L71:
 849:../Dave/Generated/src/CAN001/CAN001.c ****   }
 850:../Dave/Generated/src/CAN001/CAN001.c ****   else 
 851:../Dave/Generated/src/CAN001/CAN001.c ****   {
 852:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_RESET;
 1633              		.loc 1 852 0
 1634 002c 4FF00003 		mov	r3, #0
 1635 0030 FB60     		str	r3, [r7, #12]
 1636              	.L72:
 853:../Dave/Generated/src/CAN001/CAN001.c ****   }          
 854:../Dave/Generated/src/CAN001/CAN001.c **** 
 855:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1637              		.loc 1 855 0
 1638 0032 FB68     		ldr	r3, [r7, #12]
 856:../Dave/Generated/src/CAN001/CAN001.c **** }
 1639              		.loc 1 856 0
 1640 0034 1846     		mov	r0, r3
 1641 0036 07F11407 		add	r7, r7, #20
 1642 003a BD46     		mov	sp, r7
 1643 003c 80BC     		pop	{r7}
 1644 003e 7047     		bx	lr
 1645              		.cfi_endproc
 1646              	.LFE129:
 1648              		.section	.text.CAN001_GetMOPndRegisterBitStatus,"ax",%progbits
 1649              		.align	2
 1650              		.global	CAN001_GetMOPndRegisterBitStatus
 1651              		.thumb
 1652              		.thumb_func
 1654              	CAN001_GetMOPndRegisterBitStatus:
 1655              	.LFB130:
 857:../Dave/Generated/src/CAN001/CAN001.c **** 
 858:../Dave/Generated/src/CAN001/CAN001.c **** 
 859:../Dave/Generated/src/CAN001/CAN001.c **** 
 860:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function will return the message object's message 
 861:../Dave/Generated/src/CAN001/CAN001.c ****  *  pending register bit value
 862:../Dave/Generated/src/CAN001/CAN001.c ****  */
 863:../Dave/Generated/src/CAN001/CAN001.c **** 
 864:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOPndRegisterBitStatus
 865:../Dave/Generated/src/CAN001/CAN001.c **** (
 866:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 867:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 868:../Dave/Generated/src/CAN001/CAN001.c **** )
 869:../Dave/Generated/src/CAN001/CAN001.c **** {
 1656              		.loc 1 869 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 16
 1659              		@ frame_needed = 1, uses_anonymous_args = 0
 1660              		@ link register save eliminated.
 1661 0000 80B4     		push	{r7}
 1662              	.LCFI38:
 1663              		.cfi_def_cfa_offset 4
 1664              		.cfi_offset 7, -4
 1665 0002 85B0     		sub	sp, sp, #20
 1666              	.LCFI39:
 1667              		.cfi_def_cfa_offset 24
 1668 0004 00AF     		add	r7, sp, #0
 1669              	.LCFI40:
 1670              		.cfi_def_cfa_register 7
 1671 0006 7860     		str	r0, [r7, #4]
 1672 0008 0B46     		mov	r3, r1
 1673 000a FB70     		strb	r3, [r7, #3]
 870:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1674              		.loc 1 870 0
 1675 000c 4FF00503 		mov	r3, #5
 1676 0010 FB60     		str	r3, [r7, #12]
 871:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset;
 872:../Dave/Generated/src/CAN001/CAN001.c ****   
 873:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 874:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1677              		.loc 1 874 0
 1678 0012 7B68     		ldr	r3, [r7, #4]
 1679 0014 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1680 0016 1A46     		mov	r2, r3
 1681 0018 45F25003 		movw	r3, #20560
 1682 001c C1F20023 		movt	r3, 4608
 1683 0020 D318     		adds	r3, r2, r3
 1684 0022 4FEA8303 		lsl	r3, r3, #2
 1685 0026 BB60     		str	r3, [r7, #8]
 875:../Dave/Generated/src/CAN001/CAN001.c ****   Status = RD_REG((*MsgPndRegOffset), (CAN_MSPND_PND_Msk << (MsgObjnr-1U)), \
 1686              		.loc 1 875 0
 1687 0028 BB68     		ldr	r3, [r7, #8]
 1688 002a 1A68     		ldr	r2, [r3, #0]
 1689 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1690 002e 03F1FF33 		add	r3, r3, #-1
 1691 0032 4FF0FF31 		mov	r1, #-1
 1692 0036 01FA03F3 		lsl	r3, r1, r3
 1693 003a 1A40     		ands	r2, r2, r3
 1694 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1695 003e 03F1FF33 		add	r3, r3, #-1
 1696 0042 22FA03F3 		lsr	r3, r2, r3
 1697 0046 FB60     		str	r3, [r7, #12]
 876:../Dave/Generated/src/CAN001/CAN001.c ****                                                                   (MsgObjnr-1U));
 877:../Dave/Generated/src/CAN001/CAN001.c ****  
 878:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1698              		.loc 1 878 0
 1699 0048 FB68     		ldr	r3, [r7, #12]
 879:../Dave/Generated/src/CAN001/CAN001.c **** }
 1700              		.loc 1 879 0
 1701 004a 1846     		mov	r0, r3
 1702 004c 07F11407 		add	r7, r7, #20
 1703 0050 BD46     		mov	sp, r7
 1704 0052 80BC     		pop	{r7}
 1705 0054 7047     		bx	lr
 1706              		.cfi_endproc
 1707              	.LFE130:
 1709 0056 00BF     		.section	.text.CAN001_ClearMOFlagStatus,"ax",%progbits
 1710              		.align	2
 1711              		.global	CAN001_ClearMOFlagStatus
 1712              		.thumb
 1713              		.thumb_func
 1715              	CAN001_ClearMOFlagStatus:
 1716              	.LFB131:
 880:../Dave/Generated/src/CAN001/CAN001.c **** 
 881:../Dave/Generated/src/CAN001/CAN001.c **** 
 882:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of message object
 883:../Dave/Generated/src/CAN001/CAN001.c ****  *  register MOSTATx. The input parameter can be a combination of 
 884:../Dave/Generated/src/CAN001/CAN001.c ****  *  enum type MsgStatus
 885:../Dave/Generated/src/CAN001/CAN001.c ****  */
 886:../Dave/Generated/src/CAN001/CAN001.c **** 
 887:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOFlagStatus
 888:../Dave/Generated/src/CAN001/CAN001.c **** (
 889:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 890:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 891:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 892:../Dave/Generated/src/CAN001/CAN001.c **** )
 893:../Dave/Generated/src/CAN001/CAN001.c **** {
 1717              		.loc 1 893 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 24
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721              		@ link register save eliminated.
 1722 0000 80B4     		push	{r7}
 1723              	.LCFI41:
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0002 87B0     		sub	sp, sp, #28
 1727              	.LCFI42:
 1728              		.cfi_def_cfa_offset 32
 1729 0004 00AF     		add	r7, sp, #0
 1730              	.LCFI43:
 1731              		.cfi_def_cfa_register 7
 1732 0006 7860     		str	r0, [r7, #4]
 1733 0008 1346     		mov	r3, r2
 1734 000a 0A46     		mov	r2, r1
 1735 000c FA70     		strb	r2, [r7, #3]
 1736 000e BB70     		strb	r3, [r7, #2]
 894:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1737              		.loc 1 894 0
 1738 0010 4FF00503 		mov	r3, #5
 1739 0014 7B61     		str	r3, [r7, #20]
 895:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1740              		.loc 1 895 0
 1741 0016 7B68     		ldr	r3, [r7, #4]
 1742 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1743 001a FB78     		ldrb	r3, [r7, #3]
 1744 001c D318     		adds	r3, r2, r3
 1745 001e DBB2     		uxtb	r3, r3
 1746 0020 03F1FF33 		add	r3, r3, #-1
 1747 0024 FB74     		strb	r3, [r7, #19]
 896:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 897:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 898:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1748              		.loc 1 898 0
 1749 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1750 0028 03F11073 		add	r3, r3, #37748736
 1751 002c 03F52863 		add	r3, r3, #2688
 1752 0030 4FEA4313 		lsl	r3, r3, #5
 897:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1753              		.loc 1 897 0
 1754 0034 FB60     		str	r3, [r7, #12]
 899:../Dave/Generated/src/CAN001/CAN001.c ****   
 900:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1755              		.loc 1 900 0
 1756 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1757 0038 002B     		cmp	r3, #0
 1758 003a 04D0     		beq	.L77
 1759              		.loc 1 900 0 is_stmt 0 discriminator 1
 1760 003c 7B68     		ldr	r3, [r7, #4]
 1761 003e DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1762 0040 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1763 0042 9A42     		cmp	r2, r3
 1764 0044 03D9     		bls	.L78
 1765              	.L77:
 901:../Dave/Generated/src/CAN001/CAN001.c ****   {
 902:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1766              		.loc 1 902 0 is_stmt 1
 1767 0046 4FF00203 		mov	r3, #2
 1768 004a 7B61     		str	r3, [r7, #20]
 1769 004c 07E0     		b	.L79
 1770              	.L78:
 903:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 904:../Dave/Generated/src/CAN001/CAN001.c ****   }
 905:../Dave/Generated/src/CAN001/CAN001.c ****   else
 906:../Dave/Generated/src/CAN001/CAN001.c ****   {
 907:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN001_CLEAR_MO_STATUS_MASK & (uint32_t)NewMsgStatus;
 1771              		.loc 1 907 0
 1772 004e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1773 0050 03F01B02 		and	r2, r3, #27
 1774 0054 FB68     		ldr	r3, [r7, #12]
 1775 0056 DA61     		str	r2, [r3, #28]
 908:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1776              		.loc 1 908 0
 1777 0058 4FF00003 		mov	r3, #0
 1778 005c 7B61     		str	r3, [r7, #20]
 1779              	.L79:
 909:../Dave/Generated/src/CAN001/CAN001.c ****   }
 910:../Dave/Generated/src/CAN001/CAN001.c ****  
 911:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1780              		.loc 1 911 0
 1781 005e 7B69     		ldr	r3, [r7, #20]
 912:../Dave/Generated/src/CAN001/CAN001.c **** }	
 1782              		.loc 1 912 0
 1783 0060 1846     		mov	r0, r3
 1784 0062 07F11C07 		add	r7, r7, #28
 1785 0066 BD46     		mov	sp, r7
 1786 0068 80BC     		pop	{r7}
 1787 006a 7047     		bx	lr
 1788              		.cfi_endproc
 1789              	.LFE131:
 1791              		.section	.text.CAN001_ClearNodeFlagStatus,"ax",%progbits
 1792              		.align	2
 1793              		.global	CAN001_ClearNodeFlagStatus
 1794              		.thumb
 1795              		.thumb_func
 1797              	CAN001_ClearNodeFlagStatus:
 1798              	.LFB132:
 913:../Dave/Generated/src/CAN001/CAN001.c **** 
 914:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of Node 
 915:../Dave/Generated/src/CAN001/CAN001.c ****  *   register NSRx. The input parameter can be a combination
 916:../Dave/Generated/src/CAN001/CAN001.c ****  *   of enum type NodeStatus  
 917:../Dave/Generated/src/CAN001/CAN001.c ****  */
 918:../Dave/Generated/src/CAN001/CAN001.c **** 
 919:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_ClearNodeFlagStatus
 920:../Dave/Generated/src/CAN001/CAN001.c **** (
 921:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 922:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 923:../Dave/Generated/src/CAN001/CAN001.c **** )
 924:../Dave/Generated/src/CAN001/CAN001.c **** {
 1799              		.loc 1 924 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 16
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
 1804 0000 80B4     		push	{r7}
 1805              	.LCFI44:
 1806              		.cfi_def_cfa_offset 4
 1807              		.cfi_offset 7, -4
 1808 0002 85B0     		sub	sp, sp, #20
 1809              	.LCFI45:
 1810              		.cfi_def_cfa_offset 24
 1811 0004 00AF     		add	r7, sp, #0
 1812              	.LCFI46:
 1813              		.cfi_def_cfa_register 7
 1814 0006 7860     		str	r0, [r7, #4]
 1815 0008 0B46     		mov	r3, r1
 1816 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 925:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 926:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1817              		.loc 1 926 0
 1818 000c 7B68     		ldr	r3, [r7, #4]
 1819 000e 9B68     		ldr	r3, [r3, #8]
 1820 0010 FB60     		str	r3, [r7, #12]
 927:../Dave/Generated/src/CAN001/CAN001.c ****  
 928:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR &= ~((uint32_t)NewNodeStatus & \
 1821              		.loc 1 928 0
 1822 0012 FB68     		ldr	r3, [r7, #12]
 1823 0014 5A68     		ldr	r2, [r3, #4]
 1824 0016 7B88     		ldrh	r3, [r7, #2]
 1825 0018 03F47873 		and	r3, r3, #992
 1826 001c 6FEA0303 		mvn	r3, r3
 1827 0020 1A40     		ands	r2, r2, r3
 1828 0022 FB68     		ldr	r3, [r7, #12]
 1829 0024 5A60     		str	r2, [r3, #4]
 929:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN001_CLEAR_NODE_STATUS_MASK); 	
 930:../Dave/Generated/src/CAN001/CAN001.c ****  
 931:../Dave/Generated/src/CAN001/CAN001.c **** }
 1830              		.loc 1 931 0
 1831 0026 07F11407 		add	r7, r7, #20
 1832 002a BD46     		mov	sp, r7
 1833 002c 80BC     		pop	{r7}
 1834 002e 7047     		bx	lr
 1835              		.cfi_endproc
 1836              	.LFE132:
 1838              		.section	.text.CAN001_ClearMOPndRegisterBit,"ax",%progbits
 1839              		.align	2
 1840              		.global	CAN001_ClearMOPndRegisterBit
 1841              		.thumb
 1842              		.thumb_func
 1844              	CAN001_ClearMOPndRegisterBit:
 1845              	.LFB133:
 932:../Dave/Generated/src/CAN001/CAN001.c **** 
 933:../Dave/Generated/src/CAN001/CAN001.c **** 
 934:../Dave/Generated/src/CAN001/CAN001.c **** 
 935:../Dave/Generated/src/CAN001/CAN001.c **** 
 936:../Dave/Generated/src/CAN001/CAN001.c **** /*  These function is used to clear message pending register bit
 937:../Dave/Generated/src/CAN001/CAN001.c ****  *  of specific message object.
 938:../Dave/Generated/src/CAN001/CAN001.c ****  */
 939:../Dave/Generated/src/CAN001/CAN001.c **** 
 940:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOPndRegisterBit(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 941:../Dave/Generated/src/CAN001/CAN001.c **** {
 1846              		.loc 1 941 0
 1847              		.cfi_startproc
 1848              		@ args = 0, pretend = 0, frame = 16
 1849              		@ frame_needed = 1, uses_anonymous_args = 0
 1850              		@ link register save eliminated.
 1851 0000 80B4     		push	{r7}
 1852              	.LCFI47:
 1853              		.cfi_def_cfa_offset 4
 1854              		.cfi_offset 7, -4
 1855 0002 85B0     		sub	sp, sp, #20
 1856              	.LCFI48:
 1857              		.cfi_def_cfa_offset 24
 1858 0004 00AF     		add	r7, sp, #0
 1859              	.LCFI49:
 1860              		.cfi_def_cfa_register 7
 1861 0006 7860     		str	r0, [r7, #4]
 1862 0008 0B46     		mov	r3, r1
 1863 000a FB70     		strb	r3, [r7, #3]
 942:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1864              		.loc 1 942 0
 1865 000c 4FF00503 		mov	r3, #5
 1866 0010 FB60     		str	r3, [r7, #12]
 943:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset = 0;
 1867              		.loc 1 943 0
 1868 0012 4FF00003 		mov	r3, #0
 1869 0016 BB60     		str	r3, [r7, #8]
 944:../Dave/Generated/src/CAN001/CAN001.c ****   
 945:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1870              		.loc 1 945 0
 1871 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1872 001a 002B     		cmp	r3, #0
 1873 001c 04D0     		beq	.L83
 1874              		.loc 1 945 0 is_stmt 0 discriminator 1
 1875 001e 7B68     		ldr	r3, [r7, #4]
 1876 0020 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1877 0022 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1878 0024 9A42     		cmp	r2, r3
 1879 0026 03D9     		bls	.L84
 1880              	.L83:
 946:../Dave/Generated/src/CAN001/CAN001.c ****   {
 947:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1881              		.loc 1 947 0 is_stmt 1
 1882 0028 4FF00203 		mov	r3, #2
 1883 002c FB60     		str	r3, [r7, #12]
 1884 002e 1BE0     		b	.L85
 1885              	.L84:
 948:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 949:../Dave/Generated/src/CAN001/CAN001.c ****   }
 950:../Dave/Generated/src/CAN001/CAN001.c ****   else
 951:../Dave/Generated/src/CAN001/CAN001.c ****   {
 952:../Dave/Generated/src/CAN001/CAN001.c ****     MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1886              		.loc 1 952 0
 1887 0030 7B68     		ldr	r3, [r7, #4]
 1888 0032 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1889 0034 1A46     		mov	r2, r3
 1890 0036 45F25003 		movw	r3, #20560
 1891 003a C1F20023 		movt	r3, 4608
 1892 003e D318     		adds	r3, r2, r3
 1893 0040 4FEA8303 		lsl	r3, r3, #2
 1894 0044 BB60     		str	r3, [r7, #8]
 953:../Dave/Generated/src/CAN001/CAN001.c ****     CLR_BIT((*MsgPndRegOffset), (MsgObjnr-1U));
 1895              		.loc 1 953 0
 1896 0046 BB68     		ldr	r3, [r7, #8]
 1897 0048 1A68     		ldr	r2, [r3, #0]
 1898 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1899 004c 03F1FF33 		add	r3, r3, #-1
 1900 0050 4FF00101 		mov	r1, #1
 1901 0054 01FA03F3 		lsl	r3, r1, r3
 1902 0058 6FEA0303 		mvn	r3, r3
 1903 005c 1A40     		ands	r2, r2, r3
 1904 005e BB68     		ldr	r3, [r7, #8]
 1905 0060 1A60     		str	r2, [r3, #0]
 954:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1906              		.loc 1 954 0
 1907 0062 4FF00003 		mov	r3, #0
 1908 0066 FB60     		str	r3, [r7, #12]
 1909              	.L85:
 955:../Dave/Generated/src/CAN001/CAN001.c ****   }
 956:../Dave/Generated/src/CAN001/CAN001.c ****  
 957:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1910              		.loc 1 957 0
 1911 0068 FB68     		ldr	r3, [r7, #12]
 958:../Dave/Generated/src/CAN001/CAN001.c **** }
 1912              		.loc 1 958 0
 1913 006a 1846     		mov	r0, r3
 1914 006c 07F11407 		add	r7, r7, #20
 1915 0070 BD46     		mov	sp, r7
 1916 0072 80BC     		pop	{r7}
 1917 0074 7047     		bx	lr
 1918              		.cfi_endproc
 1919              	.LFE133:
 1921 0076 00BF     		.text
 1922              	.Letext0:
 1923              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1924              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1925              		.file 4 "C:\\DAVE3_workspace\\ws3.1.10\\CAN_BUS_THX\\Dave\\Generated\\inc\\DAVESupport/../../inc/L
 1926              		.file 5 "C:\\DAVE3_workspace\\ws3.1.10\\CAN_BUS_THX\\Dave\\Generated\\inc\\DAVESupport/../../inc/C
 1927              		.file 6 "C:\\DAVE3_workspace\\ws3.1.10\\CAN_BUS_THX\\Dave\\Generated\\inc\\DAVESupport/../../inc/C
 1928              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1929              		.file 8 "C:\\DAVE3_workspace\\ws3.1.10\\CAN_BUS_THX\\Dave\\Generated\\inc\\DAVESupport/../../inc/C
DEFINED SYMBOLS
                            *ABS*:00000000 CAN001.c
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:20     .text.CAN001_lAllocateMOtoNodeList:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:24     .text.CAN001_lAllocateMOtoNodeList:00000000 CAN001_lAllocateMOtoNodeList
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:80     .text.CAN001_lDeallocateMsgObj:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:84     .text.CAN001_lDeallocateMsgObj:00000000 CAN001_lDeallocateMsgObj
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:144    .text.CAN001_lConfigMORegs:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:148    .text.CAN001_lConfigMORegs:00000000 CAN001_lConfigMORegs
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:375    .text.CAN001_lNodeInit:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:379    .text.CAN001_lNodeInit:00000000 CAN001_lNodeInit
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:528    .text.CAN001_Init:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:533    .text.CAN001_Init:00000000 CAN001_Init
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:748    .text.CAN001_ConfigMsgObj:00000000 CAN001_ConfigMsgObj
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:592    .text.CAN001_NodeDeInit:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:597    .text.CAN001_NodeDeInit:00000000 CAN001_NodeDeInit
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:743    .text.CAN001_ConfigMsgObj:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:866    .text.CAN001_SendDataFrame:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:871    .text.CAN001_SendDataFrame:00000000 CAN001_SendDataFrame
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:965    .text.CAN001_SendRemoteFrame:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:970    .text.CAN001_SendRemoteFrame:00000000 CAN001_SendRemoteFrame
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1064   .text.CAN001_ReadMsgObj:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1069   .text.CAN001_ReadMsgObj:00000000 CAN001_ReadMsgObj
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1333   .text.CAN001_UpdateMODataRegisters:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1338   .text.CAN001_UpdateMODataRegisters:00000000 CAN001_UpdateMODataRegisters
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1516   .text.CAN001_GetMOFlagStatus:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1521   .text.CAN001_GetMOFlagStatus:00000000 CAN001_GetMOFlagStatus
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1589   .text.CAN001_GetNodeFlagStatus:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1594   .text.CAN001_GetNodeFlagStatus:00000000 CAN001_GetNodeFlagStatus
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1649   .text.CAN001_GetMOPndRegisterBitStatus:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1654   .text.CAN001_GetMOPndRegisterBitStatus:00000000 CAN001_GetMOPndRegisterBitStatus
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1710   .text.CAN001_ClearMOFlagStatus:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1715   .text.CAN001_ClearMOFlagStatus:00000000 CAN001_ClearMOFlagStatus
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1792   .text.CAN001_ClearNodeFlagStatus:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1797   .text.CAN001_ClearNodeFlagStatus:00000000 CAN001_ClearNodeFlagStatus
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1839   .text.CAN001_ClearMOPndRegisterBit:00000000 $t
C:\Users\Aqeel\AppData\Local\Temp\ccEEsDIF.s:1844   .text.CAN001_ClearMOPndRegisterBit:00000000 CAN001_ClearMOPndRegisterBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.592323046c84b12315b2713ce3886c0a
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.a6c4837fad81477ba31967683332b8cc
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.CAN_Types.h.39.df7fb5ef31e40aa4065540aa5507b9c8
                           .group:00000000 wm4.CAN001.h.81.2ffbbfa413249ddb098d31e13be0595a
                           .group:00000000 wm4.CAN001_Conf.h.47.37054df7fc8e16acb44a84e615370b4e
                           .group:00000000 wm4.CAN001.h.1182.045aa37f116a6d2f0e10a31ad28e326b
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.NVIC002_Conf.h.62.46009087f3f9db74b135a4eac7d54acd
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.a7d7190bee783732e895eea70c8f4a1b
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd

UNDEFINED SYMBOLS
CANGLOBAL_Init
CAN001_Handle0
CAN001_MessageHandle0_1
CAN001_MessageHandle0_2
